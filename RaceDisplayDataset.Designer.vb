'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("RaceDisplayDataset"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class RaceDisplayDataset
    Inherits Global.System.Data.DataSet
    
    Private tableRACE As RACEDataTable
    
    Private tableMTP As MTPDataTable
    
    Private tableODDS As ODDSDataTable
    
    Private tableRUNNINGORDER As RUNNINGORDERDataTable
    
    Private tableWIN As WINDataTable
    
    Private tablePLACE As PLACEDataTable
    
    Private tableSHOW As SHOWDataTable
    
    Private tableDAILYDOUBLE As DAILYDOUBLEDataTable
    
    Private tablePERFECTA As PERFECTADataTable
    
    Private tableBET3 As BET3DataTable
    
    Private tableTRIFECTA As TRIFECTADataTable
    
    Private tableRACEONDISPLAY As RACEONDISPLAYDataTable
    
    Private tableMESSAGES As MESSAGESDataTable
    
    Private tableSTATUS As STATUSDataTable
    
    Private tableTOD As TODDataTable
    
    Private tablePOSTTIME As POSTTIMEDataTable
    
    Private tableTIMINGFINISH As TIMINGFINISHDataTable
    
    Private tableTIMINGMILE As TIMINGMILEDataTable
    
    Private tableTIMING34 As TIMING34DataTable
    
    Private tableTIMING12 As TIMING12DataTable
    
    Private tableTIMING14 As TIMING14DataTable
    
    Private tableEXOTICS As EXOTICSDataTable
    
    Private relationRACE_ODDS As Global.System.Data.DataRelation
    
    Private relationRACE_MTP As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_RUNNINGORDER As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_WIN As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_PLACE As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_DAILYDOUBLE As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_PERFECTA As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_SHOW As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_BET3 As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_TRIFECTA As Global.System.Data.DataRelation
    
    Private relationRACEONDISPLAY_STATUS As Global.System.Data.DataRelation
    
    Private relationRACE_TOD As Global.System.Data.DataRelation
    
    Private relationRACE_POSTTIME As Global.System.Data.DataRelation
    
    Private relationRACE_EXOTICS As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("RACE")) Is Nothing) Then
                MyBase.Tables.Add(New RACEDataTable(ds.Tables("RACE")))
            End If
            If (Not (ds.Tables("MTP")) Is Nothing) Then
                MyBase.Tables.Add(New MTPDataTable(ds.Tables("MTP")))
            End If
            If (Not (ds.Tables("ODDS")) Is Nothing) Then
                MyBase.Tables.Add(New ODDSDataTable(ds.Tables("ODDS")))
            End If
            If (Not (ds.Tables("RUNNINGORDER")) Is Nothing) Then
                MyBase.Tables.Add(New RUNNINGORDERDataTable(ds.Tables("RUNNINGORDER")))
            End If
            If (Not (ds.Tables("WIN")) Is Nothing) Then
                MyBase.Tables.Add(New WINDataTable(ds.Tables("WIN")))
            End If
            If (Not (ds.Tables("PLACE")) Is Nothing) Then
                MyBase.Tables.Add(New PLACEDataTable(ds.Tables("PLACE")))
            End If
            If (Not (ds.Tables("SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SHOWDataTable(ds.Tables("SHOW")))
            End If
            If (Not (ds.Tables("DAILYDOUBLE")) Is Nothing) Then
                MyBase.Tables.Add(New DAILYDOUBLEDataTable(ds.Tables("DAILYDOUBLE")))
            End If
            If (Not (ds.Tables("PERFECTA")) Is Nothing) Then
                MyBase.Tables.Add(New PERFECTADataTable(ds.Tables("PERFECTA")))
            End If
            If (Not (ds.Tables("BET3")) Is Nothing) Then
                MyBase.Tables.Add(New BET3DataTable(ds.Tables("BET3")))
            End If
            If (Not (ds.Tables("TRIFECTA")) Is Nothing) Then
                MyBase.Tables.Add(New TRIFECTADataTable(ds.Tables("TRIFECTA")))
            End If
            If (Not (ds.Tables("RACEONDISPLAY")) Is Nothing) Then
                MyBase.Tables.Add(New RACEONDISPLAYDataTable(ds.Tables("RACEONDISPLAY")))
            End If
            If (Not (ds.Tables("MESSAGES")) Is Nothing) Then
                MyBase.Tables.Add(New MESSAGESDataTable(ds.Tables("MESSAGES")))
            End If
            If (Not (ds.Tables("STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New STATUSDataTable(ds.Tables("STATUS")))
            End If
            If (Not (ds.Tables("TOD")) Is Nothing) Then
                MyBase.Tables.Add(New TODDataTable(ds.Tables("TOD")))
            End If
            If (Not (ds.Tables("POSTTIME")) Is Nothing) Then
                MyBase.Tables.Add(New POSTTIMEDataTable(ds.Tables("POSTTIME")))
            End If
            If (Not (ds.Tables("TIMINGFINISH")) Is Nothing) Then
                MyBase.Tables.Add(New TIMINGFINISHDataTable(ds.Tables("TIMINGFINISH")))
            End If
            If (Not (ds.Tables("TIMINGMILE")) Is Nothing) Then
                MyBase.Tables.Add(New TIMINGMILEDataTable(ds.Tables("TIMINGMILE")))
            End If
            If (Not (ds.Tables("TIMING34")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING34DataTable(ds.Tables("TIMING34")))
            End If
            If (Not (ds.Tables("TIMING12")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING12DataTable(ds.Tables("TIMING12")))
            End If
            If (Not (ds.Tables("TIMING14")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING14DataTable(ds.Tables("TIMING14")))
            End If
            If (Not (ds.Tables("EXOTICS")) Is Nothing) Then
                MyBase.Tables.Add(New EXOTICSDataTable(ds.Tables("EXOTICS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RACE() As RACEDataTable
        Get
            Return Me.tableRACE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MTP() As MTPDataTable
        Get
            Return Me.tableMTP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ODDS() As ODDSDataTable
        Get
            Return Me.tableODDS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RUNNINGORDER() As RUNNINGORDERDataTable
        Get
            Return Me.tableRUNNINGORDER
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property WIN() As WINDataTable
        Get
            Return Me.tableWIN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PLACE() As PLACEDataTable
        Get
            Return Me.tablePLACE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SHOW() As SHOWDataTable
        Get
            Return Me.tableSHOW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DAILYDOUBLE() As DAILYDOUBLEDataTable
        Get
            Return Me.tableDAILYDOUBLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PERFECTA() As PERFECTADataTable
        Get
            Return Me.tablePERFECTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BET3() As BET3DataTable
        Get
            Return Me.tableBET3
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TRIFECTA() As TRIFECTADataTable
        Get
            Return Me.tableTRIFECTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RACEONDISPLAY() As RACEONDISPLAYDataTable
        Get
            Return Me.tableRACEONDISPLAY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MESSAGES() As MESSAGESDataTable
        Get
            Return Me.tableMESSAGES
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STATUS() As STATUSDataTable
        Get
            Return Me.tableSTATUS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TOD() As TODDataTable
        Get
            Return Me.tableTOD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property POSTTIME() As POSTTIMEDataTable
        Get
            Return Me.tablePOSTTIME
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIMINGFINISH() As TIMINGFINISHDataTable
        Get
            Return Me.tableTIMINGFINISH
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIMINGMILE() As TIMINGMILEDataTable
        Get
            Return Me.tableTIMINGMILE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIMING34() As TIMING34DataTable
        Get
            Return Me.tableTIMING34
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIMING12() As TIMING12DataTable
        Get
            Return Me.tableTIMING12
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIMING14() As TIMING14DataTable
        Get
            Return Me.tableTIMING14
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property EXOTICS() As EXOTICSDataTable
        Get
            Return Me.tableEXOTICS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As RaceDisplayDataset = CType(MyBase.Clone,RaceDisplayDataset)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("RACE")) Is Nothing) Then
                MyBase.Tables.Add(New RACEDataTable(ds.Tables("RACE")))
            End If
            If (Not (ds.Tables("MTP")) Is Nothing) Then
                MyBase.Tables.Add(New MTPDataTable(ds.Tables("MTP")))
            End If
            If (Not (ds.Tables("ODDS")) Is Nothing) Then
                MyBase.Tables.Add(New ODDSDataTable(ds.Tables("ODDS")))
            End If
            If (Not (ds.Tables("RUNNINGORDER")) Is Nothing) Then
                MyBase.Tables.Add(New RUNNINGORDERDataTable(ds.Tables("RUNNINGORDER")))
            End If
            If (Not (ds.Tables("WIN")) Is Nothing) Then
                MyBase.Tables.Add(New WINDataTable(ds.Tables("WIN")))
            End If
            If (Not (ds.Tables("PLACE")) Is Nothing) Then
                MyBase.Tables.Add(New PLACEDataTable(ds.Tables("PLACE")))
            End If
            If (Not (ds.Tables("SHOW")) Is Nothing) Then
                MyBase.Tables.Add(New SHOWDataTable(ds.Tables("SHOW")))
            End If
            If (Not (ds.Tables("DAILYDOUBLE")) Is Nothing) Then
                MyBase.Tables.Add(New DAILYDOUBLEDataTable(ds.Tables("DAILYDOUBLE")))
            End If
            If (Not (ds.Tables("PERFECTA")) Is Nothing) Then
                MyBase.Tables.Add(New PERFECTADataTable(ds.Tables("PERFECTA")))
            End If
            If (Not (ds.Tables("BET3")) Is Nothing) Then
                MyBase.Tables.Add(New BET3DataTable(ds.Tables("BET3")))
            End If
            If (Not (ds.Tables("TRIFECTA")) Is Nothing) Then
                MyBase.Tables.Add(New TRIFECTADataTable(ds.Tables("TRIFECTA")))
            End If
            If (Not (ds.Tables("RACEONDISPLAY")) Is Nothing) Then
                MyBase.Tables.Add(New RACEONDISPLAYDataTable(ds.Tables("RACEONDISPLAY")))
            End If
            If (Not (ds.Tables("MESSAGES")) Is Nothing) Then
                MyBase.Tables.Add(New MESSAGESDataTable(ds.Tables("MESSAGES")))
            End If
            If (Not (ds.Tables("STATUS")) Is Nothing) Then
                MyBase.Tables.Add(New STATUSDataTable(ds.Tables("STATUS")))
            End If
            If (Not (ds.Tables("TOD")) Is Nothing) Then
                MyBase.Tables.Add(New TODDataTable(ds.Tables("TOD")))
            End If
            If (Not (ds.Tables("POSTTIME")) Is Nothing) Then
                MyBase.Tables.Add(New POSTTIMEDataTable(ds.Tables("POSTTIME")))
            End If
            If (Not (ds.Tables("TIMINGFINISH")) Is Nothing) Then
                MyBase.Tables.Add(New TIMINGFINISHDataTable(ds.Tables("TIMINGFINISH")))
            End If
            If (Not (ds.Tables("TIMINGMILE")) Is Nothing) Then
                MyBase.Tables.Add(New TIMINGMILEDataTable(ds.Tables("TIMINGMILE")))
            End If
            If (Not (ds.Tables("TIMING34")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING34DataTable(ds.Tables("TIMING34")))
            End If
            If (Not (ds.Tables("TIMING12")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING12DataTable(ds.Tables("TIMING12")))
            End If
            If (Not (ds.Tables("TIMING14")) Is Nothing) Then
                MyBase.Tables.Add(New TIMING14DataTable(ds.Tables("TIMING14")))
            End If
            If (Not (ds.Tables("EXOTICS")) Is Nothing) Then
                MyBase.Tables.Add(New EXOTICSDataTable(ds.Tables("EXOTICS")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRACE = CType(MyBase.Tables("RACE"),RACEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRACE) Is Nothing) Then
                Me.tableRACE.InitVars
            End If
        End If
        Me.tableMTP = CType(MyBase.Tables("MTP"),MTPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMTP) Is Nothing) Then
                Me.tableMTP.InitVars
            End If
        End If
        Me.tableODDS = CType(MyBase.Tables("ODDS"),ODDSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableODDS) Is Nothing) Then
                Me.tableODDS.InitVars
            End If
        End If
        Me.tableRUNNINGORDER = CType(MyBase.Tables("RUNNINGORDER"),RUNNINGORDERDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRUNNINGORDER) Is Nothing) Then
                Me.tableRUNNINGORDER.InitVars
            End If
        End If
        Me.tableWIN = CType(MyBase.Tables("WIN"),WINDataTable)
        If (initTable = true) Then
            If (Not (Me.tableWIN) Is Nothing) Then
                Me.tableWIN.InitVars
            End If
        End If
        Me.tablePLACE = CType(MyBase.Tables("PLACE"),PLACEDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePLACE) Is Nothing) Then
                Me.tablePLACE.InitVars
            End If
        End If
        Me.tableSHOW = CType(MyBase.Tables("SHOW"),SHOWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSHOW) Is Nothing) Then
                Me.tableSHOW.InitVars
            End If
        End If
        Me.tableDAILYDOUBLE = CType(MyBase.Tables("DAILYDOUBLE"),DAILYDOUBLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDAILYDOUBLE) Is Nothing) Then
                Me.tableDAILYDOUBLE.InitVars
            End If
        End If
        Me.tablePERFECTA = CType(MyBase.Tables("PERFECTA"),PERFECTADataTable)
        If (initTable = true) Then
            If (Not (Me.tablePERFECTA) Is Nothing) Then
                Me.tablePERFECTA.InitVars
            End If
        End If
        Me.tableBET3 = CType(MyBase.Tables("BET3"),BET3DataTable)
        If (initTable = true) Then
            If (Not (Me.tableBET3) Is Nothing) Then
                Me.tableBET3.InitVars
            End If
        End If
        Me.tableTRIFECTA = CType(MyBase.Tables("TRIFECTA"),TRIFECTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableTRIFECTA) Is Nothing) Then
                Me.tableTRIFECTA.InitVars
            End If
        End If
        Me.tableRACEONDISPLAY = CType(MyBase.Tables("RACEONDISPLAY"),RACEONDISPLAYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRACEONDISPLAY) Is Nothing) Then
                Me.tableRACEONDISPLAY.InitVars
            End If
        End If
        Me.tableMESSAGES = CType(MyBase.Tables("MESSAGES"),MESSAGESDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMESSAGES) Is Nothing) Then
                Me.tableMESSAGES.InitVars
            End If
        End If
        Me.tableSTATUS = CType(MyBase.Tables("STATUS"),STATUSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTATUS) Is Nothing) Then
                Me.tableSTATUS.InitVars
            End If
        End If
        Me.tableTOD = CType(MyBase.Tables("TOD"),TODDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTOD) Is Nothing) Then
                Me.tableTOD.InitVars
            End If
        End If
        Me.tablePOSTTIME = CType(MyBase.Tables("POSTTIME"),POSTTIMEDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePOSTTIME) Is Nothing) Then
                Me.tablePOSTTIME.InitVars
            End If
        End If
        Me.tableTIMINGFINISH = CType(MyBase.Tables("TIMINGFINISH"),TIMINGFINISHDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIMINGFINISH) Is Nothing) Then
                Me.tableTIMINGFINISH.InitVars
            End If
        End If
        Me.tableTIMINGMILE = CType(MyBase.Tables("TIMINGMILE"),TIMINGMILEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIMINGMILE) Is Nothing) Then
                Me.tableTIMINGMILE.InitVars
            End If
        End If
        Me.tableTIMING34 = CType(MyBase.Tables("TIMING34"),TIMING34DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIMING34) Is Nothing) Then
                Me.tableTIMING34.InitVars
            End If
        End If
        Me.tableTIMING12 = CType(MyBase.Tables("TIMING12"),TIMING12DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIMING12) Is Nothing) Then
                Me.tableTIMING12.InitVars
            End If
        End If
        Me.tableTIMING14 = CType(MyBase.Tables("TIMING14"),TIMING14DataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIMING14) Is Nothing) Then
                Me.tableTIMING14.InitVars
            End If
        End If
        Me.tableEXOTICS = CType(MyBase.Tables("EXOTICS"),EXOTICSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableEXOTICS) Is Nothing) Then
                Me.tableEXOTICS.InitVars
            End If
        End If
        Me.relationRACE_ODDS = Me.Relations("RACE_ODDS")
        Me.relationRACE_MTP = Me.Relations("RACE_MTP")
        Me.relationRACEONDISPLAY_RUNNINGORDER = Me.Relations("RACEONDISPLAY_RUNNINGORDER")
        Me.relationRACEONDISPLAY_WIN = Me.Relations("RACEONDISPLAY_WIN")
        Me.relationRACEONDISPLAY_PLACE = Me.Relations("RACEONDISPLAY_PLACE")
        Me.relationRACEONDISPLAY_DAILYDOUBLE = Me.Relations("RACEONDISPLAY_DAILYDOUBLE")
        Me.relationRACEONDISPLAY_PERFECTA = Me.Relations("RACEONDISPLAY_PERFECTA")
        Me.relationRACEONDISPLAY_SHOW = Me.Relations("RACEONDISPLAY_SHOW")
        Me.relationRACEONDISPLAY_BET3 = Me.Relations("RACEONDISPLAY_BET3")
        Me.relationRACEONDISPLAY_TRIFECTA = Me.Relations("RACEONDISPLAY_TRIFECTA")
        Me.relationRACEONDISPLAY_STATUS = Me.Relations("RACEONDISPLAY_STATUS")
        Me.relationRACE_TOD = Me.Relations("RACE_TOD")
        Me.relationRACE_POSTTIME = Me.Relations("RACE_POSTTIME")
        Me.relationRACE_EXOTICS = Me.Relations("RACE_EXOTICS")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "RaceDisplayDataset"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/RaceDisplayDataset.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRACE = New RACEDataTable()
        MyBase.Tables.Add(Me.tableRACE)
        Me.tableMTP = New MTPDataTable()
        MyBase.Tables.Add(Me.tableMTP)
        Me.tableODDS = New ODDSDataTable()
        MyBase.Tables.Add(Me.tableODDS)
        Me.tableRUNNINGORDER = New RUNNINGORDERDataTable()
        MyBase.Tables.Add(Me.tableRUNNINGORDER)
        Me.tableWIN = New WINDataTable()
        MyBase.Tables.Add(Me.tableWIN)
        Me.tablePLACE = New PLACEDataTable()
        MyBase.Tables.Add(Me.tablePLACE)
        Me.tableSHOW = New SHOWDataTable()
        MyBase.Tables.Add(Me.tableSHOW)
        Me.tableDAILYDOUBLE = New DAILYDOUBLEDataTable()
        MyBase.Tables.Add(Me.tableDAILYDOUBLE)
        Me.tablePERFECTA = New PERFECTADataTable()
        MyBase.Tables.Add(Me.tablePERFECTA)
        Me.tableBET3 = New BET3DataTable()
        MyBase.Tables.Add(Me.tableBET3)
        Me.tableTRIFECTA = New TRIFECTADataTable()
        MyBase.Tables.Add(Me.tableTRIFECTA)
        Me.tableRACEONDISPLAY = New RACEONDISPLAYDataTable()
        MyBase.Tables.Add(Me.tableRACEONDISPLAY)
        Me.tableMESSAGES = New MESSAGESDataTable()
        MyBase.Tables.Add(Me.tableMESSAGES)
        Me.tableSTATUS = New STATUSDataTable()
        MyBase.Tables.Add(Me.tableSTATUS)
        Me.tableTOD = New TODDataTable()
        MyBase.Tables.Add(Me.tableTOD)
        Me.tablePOSTTIME = New POSTTIMEDataTable()
        MyBase.Tables.Add(Me.tablePOSTTIME)
        Me.tableTIMINGFINISH = New TIMINGFINISHDataTable()
        MyBase.Tables.Add(Me.tableTIMINGFINISH)
        Me.tableTIMINGMILE = New TIMINGMILEDataTable()
        MyBase.Tables.Add(Me.tableTIMINGMILE)
        Me.tableTIMING34 = New TIMING34DataTable()
        MyBase.Tables.Add(Me.tableTIMING34)
        Me.tableTIMING12 = New TIMING12DataTable()
        MyBase.Tables.Add(Me.tableTIMING12)
        Me.tableTIMING14 = New TIMING14DataTable()
        MyBase.Tables.Add(Me.tableTIMING14)
        Me.tableEXOTICS = New EXOTICSDataTable()
        MyBase.Tables.Add(Me.tableEXOTICS)
        Me.relationRACE_ODDS = New Global.System.Data.DataRelation("RACE_ODDS", New Global.System.Data.DataColumn() {Me.tableRACE.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableODDS.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACE_ODDS)
        Me.relationRACE_MTP = New Global.System.Data.DataRelation("RACE_MTP", New Global.System.Data.DataColumn() {Me.tableRACE.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableMTP.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACE_MTP)
        Me.relationRACEONDISPLAY_RUNNINGORDER = New Global.System.Data.DataRelation("RACEONDISPLAY_RUNNINGORDER", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableRUNNINGORDER.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_RUNNINGORDER)
        Me.relationRACEONDISPLAY_WIN = New Global.System.Data.DataRelation("RACEONDISPLAY_WIN", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableWIN.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_WIN)
        Me.relationRACEONDISPLAY_PLACE = New Global.System.Data.DataRelation("RACEONDISPLAY_PLACE", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tablePLACE.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_PLACE)
        Me.relationRACEONDISPLAY_DAILYDOUBLE = New Global.System.Data.DataRelation("RACEONDISPLAY_DAILYDOUBLE", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableDAILYDOUBLE.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_DAILYDOUBLE)
        Me.relationRACEONDISPLAY_PERFECTA = New Global.System.Data.DataRelation("RACEONDISPLAY_PERFECTA", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tablePERFECTA.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_PERFECTA)
        Me.relationRACEONDISPLAY_SHOW = New Global.System.Data.DataRelation("RACEONDISPLAY_SHOW", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableSHOW.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_SHOW)
        Me.relationRACEONDISPLAY_BET3 = New Global.System.Data.DataRelation("RACEONDISPLAY_BET3", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableBET3.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_BET3)
        Me.relationRACEONDISPLAY_TRIFECTA = New Global.System.Data.DataRelation("RACEONDISPLAY_TRIFECTA", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableTRIFECTA.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_TRIFECTA)
        Me.relationRACEONDISPLAY_STATUS = New Global.System.Data.DataRelation("RACEONDISPLAY_STATUS", New Global.System.Data.DataColumn() {Me.tableRACEONDISPLAY.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableSTATUS.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACEONDISPLAY_STATUS)
        Me.relationRACE_TOD = New Global.System.Data.DataRelation("RACE_TOD", New Global.System.Data.DataColumn() {Me.tableRACE.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableTOD.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACE_TOD)
        Me.relationRACE_POSTTIME = New Global.System.Data.DataRelation("RACE_POSTTIME", New Global.System.Data.DataColumn() {Me.tableRACE.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tablePOSTTIME.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACE_POSTTIME)
        Me.relationRACE_EXOTICS = New Global.System.Data.DataRelation("RACE_EXOTICS", New Global.System.Data.DataColumn() {Me.tableRACE.RACEKEYColumn}, New Global.System.Data.DataColumn() {Me.tableEXOTICS.RACEKEYColumn}, false)
        Me.Relations.Add(Me.relationRACE_EXOTICS)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRACE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeMTP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeODDS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRUNNINGORDER() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeWIN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePLACE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSHOW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeDAILYDOUBLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePERFECTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeBET3() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTRIFECTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRACEONDISPLAY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeMESSAGES() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeSTATUS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTOD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializePOSTTIME() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTIMINGFINISH() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTIMINGMILE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTIMING34() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTIMING12() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeTIMING14() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeEXOTICS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RACERowChangeEventHandler(ByVal sender As Object, ByVal e As RACERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub MTPRowChangeEventHandler(ByVal sender As Object, ByVal e As MTPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub ODDSRowChangeEventHandler(ByVal sender As Object, ByVal e As ODDSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RUNNINGORDERRowChangeEventHandler(ByVal sender As Object, ByVal e As RUNNINGORDERRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub WINRowChangeEventHandler(ByVal sender As Object, ByVal e As WINRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PLACERowChangeEventHandler(ByVal sender As Object, ByVal e As PLACERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub SHOWRowChangeEventHandler(ByVal sender As Object, ByVal e As SHOWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub DAILYDOUBLERowChangeEventHandler(ByVal sender As Object, ByVal e As DAILYDOUBLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub PERFECTARowChangeEventHandler(ByVal sender As Object, ByVal e As PERFECTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub BET3RowChangeEventHandler(ByVal sender As Object, ByVal e As BET3RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TRIFECTARowChangeEventHandler(ByVal sender As Object, ByVal e As TRIFECTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RACEONDISPLAYRowChangeEventHandler(ByVal sender As Object, ByVal e As RACEONDISPLAYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub MESSAGESRowChangeEventHandler(ByVal sender As Object, ByVal e As MESSAGESRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub STATUSRowChangeEventHandler(ByVal sender As Object, ByVal e As STATUSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TODRowChangeEventHandler(ByVal sender As Object, ByVal e As TODRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub POSTTIMERowChangeEventHandler(ByVal sender As Object, ByVal e As POSTTIMERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TIMINGFINISHRowChangeEventHandler(ByVal sender As Object, ByVal e As TIMINGFINISHRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TIMINGMILERowChangeEventHandler(ByVal sender As Object, ByVal e As TIMINGMILERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TIMING34RowChangeEventHandler(ByVal sender As Object, ByVal e As TIMING34RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TIMING12RowChangeEventHandler(ByVal sender As Object, ByVal e As TIMING12RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub TIMING14RowChangeEventHandler(ByVal sender As Object, ByVal e As TIMING14RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub EXOTICSRowChangeEventHandler(ByVal sender As Object, ByVal e As EXOTICSRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RACEDataTable
        Inherits Global.System.Data.TypedTableBase(Of RACERow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnRACENBRA As Global.System.Data.DataColumn
        
        Private columnRACENBRB As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RACE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACENBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACENBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACENBRBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACENBRB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RACERow
            Get
                Return CType(Me.Rows(index),RACERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACERowChanging As RACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACERowChanged As RACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACERowDeleting As RACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACERowDeleted As RACERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRACERow(ByVal row As RACERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRACERow(ByVal RACEKEY As Integer, ByVal RACENBRA As String, ByVal RACENBRB As String) As RACERow
            Dim rowRACERow As RACERow = CType(Me.NewRow,RACERow)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, RACENBRA, RACENBRB}
            rowRACERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRACERow)
            Return rowRACERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByRACEKEY(ByVal RACEKEY As Integer) As RACERow
            Return CType(Me.Rows.Find(New Object() {RACEKEY}),RACERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RACEDataTable = CType(MyBase.Clone,RACEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RACEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnRACENBRA = MyBase.Columns("RACENBRA")
            Me.columnRACENBRB = MyBase.Columns("RACENBRB")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnRACENBRA = New Global.System.Data.DataColumn("RACENBRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACENBRA)
            Me.columnRACENBRB = New Global.System.Data.DataColumn("RACENBRB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACENBRB)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRACEKEY}, true))
            Me.columnRACEKEY.AllowDBNull = false
            Me.columnRACEKEY.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRACERow() As RACERow
            Return CType(Me.NewRow,RACERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RACERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RACERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RACERowChangedEvent) Is Nothing) Then
                RaiseEvent RACERowChanged(Me, New RACERowChangeEvent(CType(e.Row,RACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RACERowChangingEvent) Is Nothing) Then
                RaiseEvent RACERowChanging(Me, New RACERowChangeEvent(CType(e.Row,RACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RACERowDeletedEvent) Is Nothing) Then
                RaiseEvent RACERowDeleted(Me, New RACERowChangeEvent(CType(e.Row,RACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RACERowDeletingEvent) Is Nothing) Then
                RaiseEvent RACERowDeleting(Me, New RACERowChangeEvent(CType(e.Row,RACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRACERow(ByVal row As RACERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RACEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MTPDataTable
        Inherits Global.System.Data.TypedTableBase(Of MTPRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnMINUTESA As Global.System.Data.DataColumn
        
        Private columnMINUTESB As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MTP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MINUTESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINUTESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MINUTESBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMINUTESB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MTPRow
            Get
                Return CType(Me.Rows(index),MTPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MTPRowChanging As MTPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MTPRowChanged As MTPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MTPRowDeleting As MTPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MTPRowDeleted As MTPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddMTPRow(ByVal row As MTPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddMTPRow(ByVal parentRACERowByRACE_MTP As RACERow, ByVal MINUTESA As String, ByVal MINUTESB As String) As MTPRow
            Dim rowMTPRow As MTPRow = CType(Me.NewRow,MTPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, MINUTESA, MINUTESB}
            If (Not (parentRACERowByRACE_MTP) Is Nothing) Then
                columnValuesArray(0) = parentRACERowByRACE_MTP(0)
            End If
            rowMTPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMTPRow)
            Return rowMTPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MTPDataTable = CType(MyBase.Clone,MTPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MTPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnMINUTESA = MyBase.Columns("MINUTESA")
            Me.columnMINUTESB = MyBase.Columns("MINUTESB")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnMINUTESA = New Global.System.Data.DataColumn("MINUTESA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINUTESA)
            Me.columnMINUTESB = New Global.System.Data.DataColumn("MINUTESB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMINUTESB)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewMTPRow() As MTPRow
            Return CType(Me.NewRow,MTPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MTPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MTPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MTPRowChangedEvent) Is Nothing) Then
                RaiseEvent MTPRowChanged(Me, New MTPRowChangeEvent(CType(e.Row,MTPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MTPRowChangingEvent) Is Nothing) Then
                RaiseEvent MTPRowChanging(Me, New MTPRowChangeEvent(CType(e.Row,MTPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MTPRowDeletedEvent) Is Nothing) Then
                RaiseEvent MTPRowDeleted(Me, New MTPRowChangeEvent(CType(e.Row,MTPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MTPRowDeletingEvent) Is Nothing) Then
                RaiseEvent MTPRowDeleting(Me, New MTPRowChangeEvent(CType(e.Row,MTPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveMTPRow(ByVal row As MTPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MTPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ODDSDataTable
        Inherits Global.System.Data.TypedTableBase(Of ODDSRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnODDS1 As Global.System.Data.DataColumn
        
        Private columnODDS1A As Global.System.Data.DataColumn
        
        Private columnODDS2 As Global.System.Data.DataColumn
        
        Private columnODDS2A As Global.System.Data.DataColumn
        
        Private columnODDS3 As Global.System.Data.DataColumn
        
        Private columnODDS3A As Global.System.Data.DataColumn
        
        Private columnODDS4 As Global.System.Data.DataColumn
        
        Private columnODDS4A As Global.System.Data.DataColumn
        
        Private columnODDS5 As Global.System.Data.DataColumn
        
        Private columnODDS5A As Global.System.Data.DataColumn
        
        Private columnODDS6 As Global.System.Data.DataColumn
        
        Private columnODDS6A As Global.System.Data.DataColumn
        
        Private columnODDS7 As Global.System.Data.DataColumn
        
        Private columnODDS7A As Global.System.Data.DataColumn
        
        Private columnODDS8 As Global.System.Data.DataColumn
        
        Private columnODDS8A As Global.System.Data.DataColumn
        
        Private columnODDS9 As Global.System.Data.DataColumn
        
        Private columnODDS9A As Global.System.Data.DataColumn
        
        Private columnODDS10 As Global.System.Data.DataColumn
        
        Private columnODDS10A As Global.System.Data.DataColumn
        
        Private columnODDS11 As Global.System.Data.DataColumn
        
        Private columnODDS11A As Global.System.Data.DataColumn
        
        Private columnODDS12 As Global.System.Data.DataColumn
        
        Private columnODDS12A As Global.System.Data.DataColumn
        
        Private columnODDS13 As Global.System.Data.DataColumn
        
        Private columnODDS13A As Global.System.Data.DataColumn
        
        Private columnODDS14 As Global.System.Data.DataColumn
        
        Private columnODDS14A As Global.System.Data.DataColumn
        
        Private columnODDS15 As Global.System.Data.DataColumn
        
        Private columnODDS15A As Global.System.Data.DataColumn
        
        Private columnODDS16 As Global.System.Data.DataColumn
        
        Private columnODDS16A As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ODDS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS4AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS4A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS5AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS5A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS6AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS6A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS7AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS7A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS8AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS8A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS9AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS9A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS10AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS10A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS11AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS11A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS12AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS12A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS13AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS13A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS14AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS14A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS15AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS15A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS16Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS16
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ODDS16AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnODDS16A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ODDSRow
            Get
                Return CType(Me.Rows(index),ODDSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ODDSRowChanging As ODDSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ODDSRowChanged As ODDSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ODDSRowDeleting As ODDSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event ODDSRowDeleted As ODDSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddODDSRow(ByVal row As ODDSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddODDSRow( _
                    ByVal parentRACERowByRACE_ODDS As RACERow,  _
                    ByVal ODDS1 As String,  _
                    ByVal ODDS1A As String,  _
                    ByVal ODDS2 As String,  _
                    ByVal ODDS2A As String,  _
                    ByVal ODDS3 As String,  _
                    ByVal ODDS3A As String,  _
                    ByVal ODDS4 As String,  _
                    ByVal ODDS4A As String,  _
                    ByVal ODDS5 As String,  _
                    ByVal ODDS5A As String,  _
                    ByVal ODDS6 As String,  _
                    ByVal ODDS6A As String,  _
                    ByVal ODDS7 As String,  _
                    ByVal ODDS7A As String,  _
                    ByVal ODDS8 As String,  _
                    ByVal ODDS8A As String,  _
                    ByVal ODDS9 As String,  _
                    ByVal ODDS9A As String,  _
                    ByVal ODDS10 As String,  _
                    ByVal ODDS10A As String,  _
                    ByVal ODDS11 As String,  _
                    ByVal ODDS11A As String,  _
                    ByVal ODDS12 As String,  _
                    ByVal ODDS12A As String,  _
                    ByVal ODDS13 As String,  _
                    ByVal ODDS13A As String,  _
                    ByVal ODDS14 As String,  _
                    ByVal ODDS14A As String,  _
                    ByVal ODDS15 As String,  _
                    ByVal ODDS15A As String,  _
                    ByVal ODDS16 As String,  _
                    ByVal ODDS16A As String) As ODDSRow
            Dim rowODDSRow As ODDSRow = CType(Me.NewRow,ODDSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ODDS1, ODDS1A, ODDS2, ODDS2A, ODDS3, ODDS3A, ODDS4, ODDS4A, ODDS5, ODDS5A, ODDS6, ODDS6A, ODDS7, ODDS7A, ODDS8, ODDS8A, ODDS9, ODDS9A, ODDS10, ODDS10A, ODDS11, ODDS11A, ODDS12, ODDS12A, ODDS13, ODDS13A, ODDS14, ODDS14A, ODDS15, ODDS15A, ODDS16, ODDS16A}
            If (Not (parentRACERowByRACE_ODDS) Is Nothing) Then
                columnValuesArray(0) = parentRACERowByRACE_ODDS(0)
            End If
            rowODDSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowODDSRow)
            Return rowODDSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ODDSDataTable = CType(MyBase.Clone,ODDSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ODDSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnODDS1 = MyBase.Columns("ODDS1")
            Me.columnODDS1A = MyBase.Columns("ODDS1A")
            Me.columnODDS2 = MyBase.Columns("ODDS2")
            Me.columnODDS2A = MyBase.Columns("ODDS2A")
            Me.columnODDS3 = MyBase.Columns("ODDS3")
            Me.columnODDS3A = MyBase.Columns("ODDS3A")
            Me.columnODDS4 = MyBase.Columns("ODDS4")
            Me.columnODDS4A = MyBase.Columns("ODDS4A")
            Me.columnODDS5 = MyBase.Columns("ODDS5")
            Me.columnODDS5A = MyBase.Columns("ODDS5A")
            Me.columnODDS6 = MyBase.Columns("ODDS6")
            Me.columnODDS6A = MyBase.Columns("ODDS6A")
            Me.columnODDS7 = MyBase.Columns("ODDS7")
            Me.columnODDS7A = MyBase.Columns("ODDS7A")
            Me.columnODDS8 = MyBase.Columns("ODDS8")
            Me.columnODDS8A = MyBase.Columns("ODDS8A")
            Me.columnODDS9 = MyBase.Columns("ODDS9")
            Me.columnODDS9A = MyBase.Columns("ODDS9A")
            Me.columnODDS10 = MyBase.Columns("ODDS10")
            Me.columnODDS10A = MyBase.Columns("ODDS10A")
            Me.columnODDS11 = MyBase.Columns("ODDS11")
            Me.columnODDS11A = MyBase.Columns("ODDS11A")
            Me.columnODDS12 = MyBase.Columns("ODDS12")
            Me.columnODDS12A = MyBase.Columns("ODDS12A")
            Me.columnODDS13 = MyBase.Columns("ODDS13")
            Me.columnODDS13A = MyBase.Columns("ODDS13A")
            Me.columnODDS14 = MyBase.Columns("ODDS14")
            Me.columnODDS14A = MyBase.Columns("ODDS14A")
            Me.columnODDS15 = MyBase.Columns("ODDS15")
            Me.columnODDS15A = MyBase.Columns("ODDS15A")
            Me.columnODDS16 = MyBase.Columns("ODDS16")
            Me.columnODDS16A = MyBase.Columns("ODDS16A")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnODDS1 = New Global.System.Data.DataColumn("ODDS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS1)
            Me.columnODDS1A = New Global.System.Data.DataColumn("ODDS1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS1A)
            Me.columnODDS2 = New Global.System.Data.DataColumn("ODDS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS2)
            Me.columnODDS2A = New Global.System.Data.DataColumn("ODDS2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS2A)
            Me.columnODDS3 = New Global.System.Data.DataColumn("ODDS3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS3)
            Me.columnODDS3A = New Global.System.Data.DataColumn("ODDS3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS3A)
            Me.columnODDS4 = New Global.System.Data.DataColumn("ODDS4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS4)
            Me.columnODDS4A = New Global.System.Data.DataColumn("ODDS4A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS4A)
            Me.columnODDS5 = New Global.System.Data.DataColumn("ODDS5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS5)
            Me.columnODDS5A = New Global.System.Data.DataColumn("ODDS5A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS5A)
            Me.columnODDS6 = New Global.System.Data.DataColumn("ODDS6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS6)
            Me.columnODDS6A = New Global.System.Data.DataColumn("ODDS6A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS6A)
            Me.columnODDS7 = New Global.System.Data.DataColumn("ODDS7", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS7)
            Me.columnODDS7A = New Global.System.Data.DataColumn("ODDS7A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS7A)
            Me.columnODDS8 = New Global.System.Data.DataColumn("ODDS8", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS8)
            Me.columnODDS8A = New Global.System.Data.DataColumn("ODDS8A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS8A)
            Me.columnODDS9 = New Global.System.Data.DataColumn("ODDS9", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS9)
            Me.columnODDS9A = New Global.System.Data.DataColumn("ODDS9A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS9A)
            Me.columnODDS10 = New Global.System.Data.DataColumn("ODDS10", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS10)
            Me.columnODDS10A = New Global.System.Data.DataColumn("ODDS10A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS10A)
            Me.columnODDS11 = New Global.System.Data.DataColumn("ODDS11", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS11)
            Me.columnODDS11A = New Global.System.Data.DataColumn("ODDS11A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS11A)
            Me.columnODDS12 = New Global.System.Data.DataColumn("ODDS12", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS12)
            Me.columnODDS12A = New Global.System.Data.DataColumn("ODDS12A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS12A)
            Me.columnODDS13 = New Global.System.Data.DataColumn("ODDS13", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS13)
            Me.columnODDS13A = New Global.System.Data.DataColumn("ODDS13A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS13A)
            Me.columnODDS14 = New Global.System.Data.DataColumn("ODDS14", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS14)
            Me.columnODDS14A = New Global.System.Data.DataColumn("ODDS14A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS14A)
            Me.columnODDS15 = New Global.System.Data.DataColumn("ODDS15", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS15)
            Me.columnODDS15A = New Global.System.Data.DataColumn("ODDS15A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS15A)
            Me.columnODDS16 = New Global.System.Data.DataColumn("ODDS16", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS16)
            Me.columnODDS16A = New Global.System.Data.DataColumn("ODDS16A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnODDS16A)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewODDSRow() As ODDSRow
            Return CType(Me.NewRow,ODDSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ODDSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ODDSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ODDSRowChangedEvent) Is Nothing) Then
                RaiseEvent ODDSRowChanged(Me, New ODDSRowChangeEvent(CType(e.Row,ODDSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ODDSRowChangingEvent) Is Nothing) Then
                RaiseEvent ODDSRowChanging(Me, New ODDSRowChangeEvent(CType(e.Row,ODDSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ODDSRowDeletedEvent) Is Nothing) Then
                RaiseEvent ODDSRowDeleted(Me, New ODDSRowChangeEvent(CType(e.Row,ODDSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ODDSRowDeletingEvent) Is Nothing) Then
                RaiseEvent ODDSRowDeleting(Me, New ODDSRowChangeEvent(CType(e.Row,ODDSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveODDSRow(ByVal row As ODDSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ODDSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RUNNINGORDERDataTable
        Inherits Global.System.Data.TypedTableBase(Of RUNNINGORDERRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnWINNER1 As Global.System.Data.DataColumn
        
        Private columnWINNER1A As Global.System.Data.DataColumn
        
        Private columnWINNER2 As Global.System.Data.DataColumn
        
        Private columnWINNER2A As Global.System.Data.DataColumn
        
        Private columnWINNER3 As Global.System.Data.DataColumn
        
        Private columnWINNER3A As Global.System.Data.DataColumn
        
        Private columnWINNER4 As Global.System.Data.DataColumn
        
        Private columnWINNER4A As Global.System.Data.DataColumn
        
        Private columnWINNERDH1 As Global.System.Data.DataColumn
        
        Private columnWINNERDH2 As Global.System.Data.DataColumn
        
        Private columnWINNERDH3 As Global.System.Data.DataColumn
        
        Private columnWINNERDH4 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RUNNINGORDER"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNER4AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNER4A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNERDH1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNERDH1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNERDH2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNERDH2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNERDH3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNERDH3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINNERDH4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINNERDH4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RUNNINGORDERRow
            Get
                Return CType(Me.Rows(index),RUNNINGORDERRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUNNINGORDERRowChanging As RUNNINGORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUNNINGORDERRowChanged As RUNNINGORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUNNINGORDERRowDeleting As RUNNINGORDERRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RUNNINGORDERRowDeleted As RUNNINGORDERRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRUNNINGORDERRow(ByVal row As RUNNINGORDERRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRUNNINGORDERRow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_RUNNINGORDER As RACEONDISPLAYRow, ByVal WINNER1 As String, ByVal WINNER1A As String, ByVal WINNER2 As String, ByVal WINNER2A As String, ByVal WINNER3 As String, ByVal WINNER3A As String, ByVal WINNER4 As String, ByVal WINNER4A As String, ByVal WINNERDH1 As Boolean, ByVal WINNERDH2 As Boolean, ByVal WINNERDH3 As Boolean, ByVal WINNERDH4 As Boolean) As RUNNINGORDERRow
            Dim rowRUNNINGORDERRow As RUNNINGORDERRow = CType(Me.NewRow,RUNNINGORDERRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, WINNER1, WINNER1A, WINNER2, WINNER2A, WINNER3, WINNER3A, WINNER4, WINNER4A, WINNERDH1, WINNERDH2, WINNERDH3, WINNERDH4}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_RUNNINGORDER) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_RUNNINGORDER(0)
            End If
            rowRUNNINGORDERRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRUNNINGORDERRow)
            Return rowRUNNINGORDERRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RUNNINGORDERDataTable = CType(MyBase.Clone,RUNNINGORDERDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RUNNINGORDERDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnWINNER1 = MyBase.Columns("WINNER1")
            Me.columnWINNER1A = MyBase.Columns("WINNER1A")
            Me.columnWINNER2 = MyBase.Columns("WINNER2")
            Me.columnWINNER2A = MyBase.Columns("WINNER2A")
            Me.columnWINNER3 = MyBase.Columns("WINNER3")
            Me.columnWINNER3A = MyBase.Columns("WINNER3A")
            Me.columnWINNER4 = MyBase.Columns("WINNER4")
            Me.columnWINNER4A = MyBase.Columns("WINNER4A")
            Me.columnWINNERDH1 = MyBase.Columns("WINNERDH1")
            Me.columnWINNERDH2 = MyBase.Columns("WINNERDH2")
            Me.columnWINNERDH3 = MyBase.Columns("WINNERDH3")
            Me.columnWINNERDH4 = MyBase.Columns("WINNERDH4")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnWINNER1 = New Global.System.Data.DataColumn("WINNER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER1)
            Me.columnWINNER1A = New Global.System.Data.DataColumn("WINNER1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER1A)
            Me.columnWINNER2 = New Global.System.Data.DataColumn("WINNER2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER2)
            Me.columnWINNER2A = New Global.System.Data.DataColumn("WINNER2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER2A)
            Me.columnWINNER3 = New Global.System.Data.DataColumn("WINNER3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER3)
            Me.columnWINNER3A = New Global.System.Data.DataColumn("WINNER3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER3A)
            Me.columnWINNER4 = New Global.System.Data.DataColumn("WINNER4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER4)
            Me.columnWINNER4A = New Global.System.Data.DataColumn("WINNER4A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNER4A)
            Me.columnWINNERDH1 = New Global.System.Data.DataColumn("WINNERDH1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNERDH1)
            Me.columnWINNERDH2 = New Global.System.Data.DataColumn("WINNERDH2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNERDH2)
            Me.columnWINNERDH3 = New Global.System.Data.DataColumn("WINNERDH3", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNERDH3)
            Me.columnWINNERDH4 = New Global.System.Data.DataColumn("WINNERDH4", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINNERDH4)
            Me.columnWINNERDH1.DefaultValue = CType(false,Boolean)
            Me.columnWINNERDH2.DefaultValue = CType(false,Boolean)
            Me.columnWINNERDH3.DefaultValue = CType(false,Boolean)
            Me.columnWINNERDH4.DefaultValue = CType(false,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRUNNINGORDERRow() As RUNNINGORDERRow
            Return CType(Me.NewRow,RUNNINGORDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RUNNINGORDERRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RUNNINGORDERRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RUNNINGORDERRowChangedEvent) Is Nothing) Then
                RaiseEvent RUNNINGORDERRowChanged(Me, New RUNNINGORDERRowChangeEvent(CType(e.Row,RUNNINGORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RUNNINGORDERRowChangingEvent) Is Nothing) Then
                RaiseEvent RUNNINGORDERRowChanging(Me, New RUNNINGORDERRowChangeEvent(CType(e.Row,RUNNINGORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RUNNINGORDERRowDeletedEvent) Is Nothing) Then
                RaiseEvent RUNNINGORDERRowDeleted(Me, New RUNNINGORDERRowChangeEvent(CType(e.Row,RUNNINGORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RUNNINGORDERRowDeletingEvent) Is Nothing) Then
                RaiseEvent RUNNINGORDERRowDeleting(Me, New RUNNINGORDERRowChangeEvent(CType(e.Row,RUNNINGORDERRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRUNNINGORDERRow(ByVal row As RUNNINGORDERRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RUNNINGORDERDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class WINDataTable
        Inherits Global.System.Data.TypedTableBase(Of WINRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1A As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1B As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1C As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1D As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1E As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT1F As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2A As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2B As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2C As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2D As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2E As Global.System.Data.DataColumn
        
        Private columnWINAMOUNT2F As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "WIN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT1FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT1F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property WINAMOUNT2FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWINAMOUNT2F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As WINRow
            Get
                Return CType(Me.Rows(index),WINRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event WINRowChanging As WINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event WINRowChanged As WINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event WINRowDeleting As WINRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event WINRowDeleted As WINRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddWINRow(ByVal row As WINRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddWINRow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_WIN As RACEONDISPLAYRow, ByVal WINAMOUNT1A As String, ByVal WINAMOUNT1B As String, ByVal WINAMOUNT1C As String, ByVal WINAMOUNT1D As String, ByVal WINAMOUNT1E As String, ByVal WINAMOUNT1F As String, ByVal WINAMOUNT2A As String, ByVal WINAMOUNT2B As String, ByVal WINAMOUNT2C As String, ByVal WINAMOUNT2D As String, ByVal WINAMOUNT2E As String, ByVal WINAMOUNT2F As String) As WINRow
            Dim rowWINRow As WINRow = CType(Me.NewRow,WINRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, WINAMOUNT1A, WINAMOUNT1B, WINAMOUNT1C, WINAMOUNT1D, WINAMOUNT1E, WINAMOUNT1F, WINAMOUNT2A, WINAMOUNT2B, WINAMOUNT2C, WINAMOUNT2D, WINAMOUNT2E, WINAMOUNT2F}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_WIN) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_WIN(0)
            End If
            rowWINRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowWINRow)
            Return rowWINRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As WINDataTable = CType(MyBase.Clone,WINDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New WINDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnWINAMOUNT1A = MyBase.Columns("WINAMOUNT1A")
            Me.columnWINAMOUNT1B = MyBase.Columns("WINAMOUNT1B")
            Me.columnWINAMOUNT1C = MyBase.Columns("WINAMOUNT1C")
            Me.columnWINAMOUNT1D = MyBase.Columns("WINAMOUNT1D")
            Me.columnWINAMOUNT1E = MyBase.Columns("WINAMOUNT1E")
            Me.columnWINAMOUNT1F = MyBase.Columns("WINAMOUNT1F")
            Me.columnWINAMOUNT2A = MyBase.Columns("WINAMOUNT2A")
            Me.columnWINAMOUNT2B = MyBase.Columns("WINAMOUNT2B")
            Me.columnWINAMOUNT2C = MyBase.Columns("WINAMOUNT2C")
            Me.columnWINAMOUNT2D = MyBase.Columns("WINAMOUNT2D")
            Me.columnWINAMOUNT2E = MyBase.Columns("WINAMOUNT2E")
            Me.columnWINAMOUNT2F = MyBase.Columns("WINAMOUNT2F")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnWINAMOUNT1A = New Global.System.Data.DataColumn("WINAMOUNT1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1A)
            Me.columnWINAMOUNT1B = New Global.System.Data.DataColumn("WINAMOUNT1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1B)
            Me.columnWINAMOUNT1C = New Global.System.Data.DataColumn("WINAMOUNT1C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1C)
            Me.columnWINAMOUNT1D = New Global.System.Data.DataColumn("WINAMOUNT1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1D)
            Me.columnWINAMOUNT1E = New Global.System.Data.DataColumn("WINAMOUNT1E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1E)
            Me.columnWINAMOUNT1F = New Global.System.Data.DataColumn("WINAMOUNT1F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT1F)
            Me.columnWINAMOUNT2A = New Global.System.Data.DataColumn("WINAMOUNT2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2A)
            Me.columnWINAMOUNT2B = New Global.System.Data.DataColumn("WINAMOUNT2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2B)
            Me.columnWINAMOUNT2C = New Global.System.Data.DataColumn("WINAMOUNT2C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2C)
            Me.columnWINAMOUNT2D = New Global.System.Data.DataColumn("WINAMOUNT2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2D)
            Me.columnWINAMOUNT2E = New Global.System.Data.DataColumn("WINAMOUNT2E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2E)
            Me.columnWINAMOUNT2F = New Global.System.Data.DataColumn("WINAMOUNT2F", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWINAMOUNT2F)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewWINRow() As WINRow
            Return CType(Me.NewRow,WINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New WINRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(WINRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.WINRowChangedEvent) Is Nothing) Then
                RaiseEvent WINRowChanged(Me, New WINRowChangeEvent(CType(e.Row,WINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.WINRowChangingEvent) Is Nothing) Then
                RaiseEvent WINRowChanging(Me, New WINRowChangeEvent(CType(e.Row,WINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.WINRowDeletedEvent) Is Nothing) Then
                RaiseEvent WINRowDeleted(Me, New WINRowChangeEvent(CType(e.Row,WINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.WINRowDeletingEvent) Is Nothing) Then
                RaiseEvent WINRowDeleting(Me, New WINRowChangeEvent(CType(e.Row,WINRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveWINRow(ByVal row As WINRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "WINDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PLACEDataTable
        Inherits Global.System.Data.TypedTableBase(Of PLACERow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT1A As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT1B As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT1C As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT1D As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT1E As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT2A As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT2B As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT2C As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT2D As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT2E As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT3A As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT3B As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT3C As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT3D As Global.System.Data.DataColumn
        
        Private columnPLACEAMOUNT3E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PLACE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT1CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT1C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT1EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT1E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT2CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT2C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT2EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT2E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT3BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT3B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT3CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT3C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT3DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT3D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PLACEAMOUNT3EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLACEAMOUNT3E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PLACERow
            Get
                Return CType(Me.Rows(index),PLACERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PLACERowChanging As PLACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PLACERowChanged As PLACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PLACERowDeleting As PLACERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PLACERowDeleted As PLACERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPLACERow(ByVal row As PLACERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPLACERow( _
                    ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_PLACE As RACEONDISPLAYRow,  _
                    ByVal PLACEAMOUNT1A As String,  _
                    ByVal PLACEAMOUNT1B As String,  _
                    ByVal PLACEAMOUNT1C As String,  _
                    ByVal PLACEAMOUNT1D As String,  _
                    ByVal PLACEAMOUNT1E As String,  _
                    ByVal PLACEAMOUNT2A As String,  _
                    ByVal PLACEAMOUNT2B As String,  _
                    ByVal PLACEAMOUNT2C As String,  _
                    ByVal PLACEAMOUNT2D As String,  _
                    ByVal PLACEAMOUNT2E As String,  _
                    ByVal PLACEAMOUNT3A As String,  _
                    ByVal PLACEAMOUNT3B As String,  _
                    ByVal PLACEAMOUNT3C As String,  _
                    ByVal PLACEAMOUNT3D As String,  _
                    ByVal PLACEAMOUNT3E As String) As PLACERow
            Dim rowPLACERow As PLACERow = CType(Me.NewRow,PLACERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PLACEAMOUNT1A, PLACEAMOUNT1B, PLACEAMOUNT1C, PLACEAMOUNT1D, PLACEAMOUNT1E, PLACEAMOUNT2A, PLACEAMOUNT2B, PLACEAMOUNT2C, PLACEAMOUNT2D, PLACEAMOUNT2E, PLACEAMOUNT3A, PLACEAMOUNT3B, PLACEAMOUNT3C, PLACEAMOUNT3D, PLACEAMOUNT3E}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_PLACE) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_PLACE(0)
            End If
            rowPLACERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPLACERow)
            Return rowPLACERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PLACEDataTable = CType(MyBase.Clone,PLACEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PLACEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnPLACEAMOUNT1A = MyBase.Columns("PLACEAMOUNT1A")
            Me.columnPLACEAMOUNT1B = MyBase.Columns("PLACEAMOUNT1B")
            Me.columnPLACEAMOUNT1C = MyBase.Columns("PLACEAMOUNT1C")
            Me.columnPLACEAMOUNT1D = MyBase.Columns("PLACEAMOUNT1D")
            Me.columnPLACEAMOUNT1E = MyBase.Columns("PLACEAMOUNT1E")
            Me.columnPLACEAMOUNT2A = MyBase.Columns("PLACEAMOUNT2A")
            Me.columnPLACEAMOUNT2B = MyBase.Columns("PLACEAMOUNT2B")
            Me.columnPLACEAMOUNT2C = MyBase.Columns("PLACEAMOUNT2C")
            Me.columnPLACEAMOUNT2D = MyBase.Columns("PLACEAMOUNT2D")
            Me.columnPLACEAMOUNT2E = MyBase.Columns("PLACEAMOUNT2E")
            Me.columnPLACEAMOUNT3A = MyBase.Columns("PLACEAMOUNT3A")
            Me.columnPLACEAMOUNT3B = MyBase.Columns("PLACEAMOUNT3B")
            Me.columnPLACEAMOUNT3C = MyBase.Columns("PLACEAMOUNT3C")
            Me.columnPLACEAMOUNT3D = MyBase.Columns("PLACEAMOUNT3D")
            Me.columnPLACEAMOUNT3E = MyBase.Columns("PLACEAMOUNT3E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnPLACEAMOUNT1A = New Global.System.Data.DataColumn("PLACEAMOUNT1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT1A)
            Me.columnPLACEAMOUNT1B = New Global.System.Data.DataColumn("PLACEAMOUNT1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT1B)
            Me.columnPLACEAMOUNT1C = New Global.System.Data.DataColumn("PLACEAMOUNT1C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT1C)
            Me.columnPLACEAMOUNT1D = New Global.System.Data.DataColumn("PLACEAMOUNT1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT1D)
            Me.columnPLACEAMOUNT1E = New Global.System.Data.DataColumn("PLACEAMOUNT1E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT1E)
            Me.columnPLACEAMOUNT2A = New Global.System.Data.DataColumn("PLACEAMOUNT2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT2A)
            Me.columnPLACEAMOUNT2B = New Global.System.Data.DataColumn("PLACEAMOUNT2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT2B)
            Me.columnPLACEAMOUNT2C = New Global.System.Data.DataColumn("PLACEAMOUNT2C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT2C)
            Me.columnPLACEAMOUNT2D = New Global.System.Data.DataColumn("PLACEAMOUNT2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT2D)
            Me.columnPLACEAMOUNT2E = New Global.System.Data.DataColumn("PLACEAMOUNT2E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT2E)
            Me.columnPLACEAMOUNT3A = New Global.System.Data.DataColumn("PLACEAMOUNT3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT3A)
            Me.columnPLACEAMOUNT3B = New Global.System.Data.DataColumn("PLACEAMOUNT3B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT3B)
            Me.columnPLACEAMOUNT3C = New Global.System.Data.DataColumn("PLACEAMOUNT3C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT3C)
            Me.columnPLACEAMOUNT3D = New Global.System.Data.DataColumn("PLACEAMOUNT3D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT3D)
            Me.columnPLACEAMOUNT3E = New Global.System.Data.DataColumn("PLACEAMOUNT3E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLACEAMOUNT3E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPLACERow() As PLACERow
            Return CType(Me.NewRow,PLACERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PLACERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PLACERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PLACERowChangedEvent) Is Nothing) Then
                RaiseEvent PLACERowChanged(Me, New PLACERowChangeEvent(CType(e.Row,PLACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PLACERowChangingEvent) Is Nothing) Then
                RaiseEvent PLACERowChanging(Me, New PLACERowChangeEvent(CType(e.Row,PLACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PLACERowDeletedEvent) Is Nothing) Then
                RaiseEvent PLACERowDeleted(Me, New PLACERowChangeEvent(CType(e.Row,PLACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PLACERowDeletingEvent) Is Nothing) Then
                RaiseEvent PLACERowDeleting(Me, New PLACERowChangeEvent(CType(e.Row,PLACERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePLACERow(ByVal row As PLACERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PLACEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SHOWDataTable
        Inherits Global.System.Data.TypedTableBase(Of SHOWRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT1A As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT1B As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT1C As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT1D As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT1E As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT2A As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT2B As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT2C As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT2D As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT2E As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT3A As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT3B As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT3C As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT3D As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT3E As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT4A As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT4B As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT4C As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT4D As Global.System.Data.DataColumn
        
        Private columnSHOWAMOUNT4E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SHOW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT1CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT1C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT1EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT1E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT2CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT2C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT2EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT2E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT3BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT3B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT3CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT3C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT3DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT3D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT3EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT3E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT4AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT4A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT4BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT4B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT4CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT4C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT4DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT4D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SHOWAMOUNT4EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHOWAMOUNT4E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SHOWRow
            Get
                Return CType(Me.Rows(index),SHOWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SHOWRowChanging As SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SHOWRowChanged As SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SHOWRowDeleting As SHOWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event SHOWRowDeleted As SHOWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSHOWRow(ByVal row As SHOWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSHOWRow( _
                    ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_SHOW As RACEONDISPLAYRow,  _
                    ByVal SHOWAMOUNT1A As String,  _
                    ByVal SHOWAMOUNT1B As String,  _
                    ByVal SHOWAMOUNT1C As String,  _
                    ByVal SHOWAMOUNT1D As String,  _
                    ByVal SHOWAMOUNT1E As String,  _
                    ByVal SHOWAMOUNT2A As String,  _
                    ByVal SHOWAMOUNT2B As String,  _
                    ByVal SHOWAMOUNT2C As String,  _
                    ByVal SHOWAMOUNT2D As String,  _
                    ByVal SHOWAMOUNT2E As String,  _
                    ByVal SHOWAMOUNT3A As String,  _
                    ByVal SHOWAMOUNT3B As String,  _
                    ByVal SHOWAMOUNT3C As String,  _
                    ByVal SHOWAMOUNT3D As String,  _
                    ByVal SHOWAMOUNT3E As String,  _
                    ByVal SHOWAMOUNT4A As String,  _
                    ByVal SHOWAMOUNT4B As String,  _
                    ByVal SHOWAMOUNT4C As String,  _
                    ByVal SHOWAMOUNT4D As String,  _
                    ByVal SHOWAMOUNT4E As String) As SHOWRow
            Dim rowSHOWRow As SHOWRow = CType(Me.NewRow,SHOWRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SHOWAMOUNT1A, SHOWAMOUNT1B, SHOWAMOUNT1C, SHOWAMOUNT1D, SHOWAMOUNT1E, SHOWAMOUNT2A, SHOWAMOUNT2B, SHOWAMOUNT2C, SHOWAMOUNT2D, SHOWAMOUNT2E, SHOWAMOUNT3A, SHOWAMOUNT3B, SHOWAMOUNT3C, SHOWAMOUNT3D, SHOWAMOUNT3E, SHOWAMOUNT4A, SHOWAMOUNT4B, SHOWAMOUNT4C, SHOWAMOUNT4D, SHOWAMOUNT4E}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_SHOW) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_SHOW(0)
            End If
            rowSHOWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSHOWRow)
            Return rowSHOWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SHOWDataTable = CType(MyBase.Clone,SHOWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SHOWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnSHOWAMOUNT1A = MyBase.Columns("SHOWAMOUNT1A")
            Me.columnSHOWAMOUNT1B = MyBase.Columns("SHOWAMOUNT1B")
            Me.columnSHOWAMOUNT1C = MyBase.Columns("SHOWAMOUNT1C")
            Me.columnSHOWAMOUNT1D = MyBase.Columns("SHOWAMOUNT1D")
            Me.columnSHOWAMOUNT1E = MyBase.Columns("SHOWAMOUNT1E")
            Me.columnSHOWAMOUNT2A = MyBase.Columns("SHOWAMOUNT2A")
            Me.columnSHOWAMOUNT2B = MyBase.Columns("SHOWAMOUNT2B")
            Me.columnSHOWAMOUNT2C = MyBase.Columns("SHOWAMOUNT2C")
            Me.columnSHOWAMOUNT2D = MyBase.Columns("SHOWAMOUNT2D")
            Me.columnSHOWAMOUNT2E = MyBase.Columns("SHOWAMOUNT2E")
            Me.columnSHOWAMOUNT3A = MyBase.Columns("SHOWAMOUNT3A")
            Me.columnSHOWAMOUNT3B = MyBase.Columns("SHOWAMOUNT3B")
            Me.columnSHOWAMOUNT3C = MyBase.Columns("SHOWAMOUNT3C")
            Me.columnSHOWAMOUNT3D = MyBase.Columns("SHOWAMOUNT3D")
            Me.columnSHOWAMOUNT3E = MyBase.Columns("SHOWAMOUNT3E")
            Me.columnSHOWAMOUNT4A = MyBase.Columns("SHOWAMOUNT4A")
            Me.columnSHOWAMOUNT4B = MyBase.Columns("SHOWAMOUNT4B")
            Me.columnSHOWAMOUNT4C = MyBase.Columns("SHOWAMOUNT4C")
            Me.columnSHOWAMOUNT4D = MyBase.Columns("SHOWAMOUNT4D")
            Me.columnSHOWAMOUNT4E = MyBase.Columns("SHOWAMOUNT4E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnSHOWAMOUNT1A = New Global.System.Data.DataColumn("SHOWAMOUNT1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT1A)
            Me.columnSHOWAMOUNT1B = New Global.System.Data.DataColumn("SHOWAMOUNT1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT1B)
            Me.columnSHOWAMOUNT1C = New Global.System.Data.DataColumn("SHOWAMOUNT1C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT1C)
            Me.columnSHOWAMOUNT1D = New Global.System.Data.DataColumn("SHOWAMOUNT1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT1D)
            Me.columnSHOWAMOUNT1E = New Global.System.Data.DataColumn("SHOWAMOUNT1E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT1E)
            Me.columnSHOWAMOUNT2A = New Global.System.Data.DataColumn("SHOWAMOUNT2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT2A)
            Me.columnSHOWAMOUNT2B = New Global.System.Data.DataColumn("SHOWAMOUNT2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT2B)
            Me.columnSHOWAMOUNT2C = New Global.System.Data.DataColumn("SHOWAMOUNT2C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT2C)
            Me.columnSHOWAMOUNT2D = New Global.System.Data.DataColumn("SHOWAMOUNT2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT2D)
            Me.columnSHOWAMOUNT2E = New Global.System.Data.DataColumn("SHOWAMOUNT2E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT2E)
            Me.columnSHOWAMOUNT3A = New Global.System.Data.DataColumn("SHOWAMOUNT3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT3A)
            Me.columnSHOWAMOUNT3B = New Global.System.Data.DataColumn("SHOWAMOUNT3B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT3B)
            Me.columnSHOWAMOUNT3C = New Global.System.Data.DataColumn("SHOWAMOUNT3C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT3C)
            Me.columnSHOWAMOUNT3D = New Global.System.Data.DataColumn("SHOWAMOUNT3D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT3D)
            Me.columnSHOWAMOUNT3E = New Global.System.Data.DataColumn("SHOWAMOUNT3E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT3E)
            Me.columnSHOWAMOUNT4A = New Global.System.Data.DataColumn("SHOWAMOUNT4A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT4A)
            Me.columnSHOWAMOUNT4B = New Global.System.Data.DataColumn("SHOWAMOUNT4B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT4B)
            Me.columnSHOWAMOUNT4C = New Global.System.Data.DataColumn("SHOWAMOUNT4C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT4C)
            Me.columnSHOWAMOUNT4D = New Global.System.Data.DataColumn("SHOWAMOUNT4D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT4D)
            Me.columnSHOWAMOUNT4E = New Global.System.Data.DataColumn("SHOWAMOUNT4E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHOWAMOUNT4E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSHOWRow() As SHOWRow
            Return CType(Me.NewRow,SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SHOWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SHOWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SHOWRowChangedEvent) Is Nothing) Then
                RaiseEvent SHOWRowChanged(Me, New SHOWRowChangeEvent(CType(e.Row,SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SHOWRowChangingEvent) Is Nothing) Then
                RaiseEvent SHOWRowChanging(Me, New SHOWRowChangeEvent(CType(e.Row,SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SHOWRowDeletedEvent) Is Nothing) Then
                RaiseEvent SHOWRowDeleted(Me, New SHOWRowChangeEvent(CType(e.Row,SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SHOWRowDeletingEvent) Is Nothing) Then
                RaiseEvent SHOWRowDeleting(Me, New SHOWRowChangeEvent(CType(e.Row,SHOWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSHOWRow(ByVal row As SHOWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SHOWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DAILYDOUBLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DAILYDOUBLERow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnDD1A As Global.System.Data.DataColumn
        
        Private columnDD1B As Global.System.Data.DataColumn
        
        Private columnDD2A As Global.System.Data.DataColumn
        
        Private columnDD2B As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTA As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTB As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTC As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTD As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTE As Global.System.Data.DataColumn
        
        Private columnDDAMOUNTF As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DAILYDOUBLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DD1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DD1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DD2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DD2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDD2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DDAMOUNTFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDDAMOUNTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DAILYDOUBLERow
            Get
                Return CType(Me.Rows(index),DAILYDOUBLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DAILYDOUBLERowChanging As DAILYDOUBLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DAILYDOUBLERowChanged As DAILYDOUBLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DAILYDOUBLERowDeleting As DAILYDOUBLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event DAILYDOUBLERowDeleted As DAILYDOUBLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddDAILYDOUBLERow(ByVal row As DAILYDOUBLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddDAILYDOUBLERow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_DAILYDOUBLE As RACEONDISPLAYRow, ByVal DD1A As String, ByVal DD1B As String, ByVal DD2A As String, ByVal DD2B As String, ByVal DDAMOUNTA As String, ByVal DDAMOUNTB As String, ByVal DDAMOUNTC As String, ByVal DDAMOUNTD As String, ByVal DDAMOUNTE As String, ByVal DDAMOUNTF As String) As DAILYDOUBLERow
            Dim rowDAILYDOUBLERow As DAILYDOUBLERow = CType(Me.NewRow,DAILYDOUBLERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DD1A, DD1B, DD2A, DD2B, DDAMOUNTA, DDAMOUNTB, DDAMOUNTC, DDAMOUNTD, DDAMOUNTE, DDAMOUNTF}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_DAILYDOUBLE) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_DAILYDOUBLE(0)
            End If
            rowDAILYDOUBLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDAILYDOUBLERow)
            Return rowDAILYDOUBLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DAILYDOUBLEDataTable = CType(MyBase.Clone,DAILYDOUBLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DAILYDOUBLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnDD1A = MyBase.Columns("DD1A")
            Me.columnDD1B = MyBase.Columns("DD1B")
            Me.columnDD2A = MyBase.Columns("DD2A")
            Me.columnDD2B = MyBase.Columns("DD2B")
            Me.columnDDAMOUNTA = MyBase.Columns("DDAMOUNTA")
            Me.columnDDAMOUNTB = MyBase.Columns("DDAMOUNTB")
            Me.columnDDAMOUNTC = MyBase.Columns("DDAMOUNTC")
            Me.columnDDAMOUNTD = MyBase.Columns("DDAMOUNTD")
            Me.columnDDAMOUNTE = MyBase.Columns("DDAMOUNTE")
            Me.columnDDAMOUNTF = MyBase.Columns("DDAMOUNTF")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnDD1A = New Global.System.Data.DataColumn("DD1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD1A)
            Me.columnDD1B = New Global.System.Data.DataColumn("DD1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD1B)
            Me.columnDD2A = New Global.System.Data.DataColumn("DD2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD2A)
            Me.columnDD2B = New Global.System.Data.DataColumn("DD2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDD2B)
            Me.columnDDAMOUNTA = New Global.System.Data.DataColumn("DDAMOUNTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTA)
            Me.columnDDAMOUNTB = New Global.System.Data.DataColumn("DDAMOUNTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTB)
            Me.columnDDAMOUNTC = New Global.System.Data.DataColumn("DDAMOUNTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTC)
            Me.columnDDAMOUNTD = New Global.System.Data.DataColumn("DDAMOUNTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTD)
            Me.columnDDAMOUNTE = New Global.System.Data.DataColumn("DDAMOUNTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTE)
            Me.columnDDAMOUNTF = New Global.System.Data.DataColumn("DDAMOUNTF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDDAMOUNTF)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewDAILYDOUBLERow() As DAILYDOUBLERow
            Return CType(Me.NewRow,DAILYDOUBLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DAILYDOUBLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DAILYDOUBLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DAILYDOUBLERowChangedEvent) Is Nothing) Then
                RaiseEvent DAILYDOUBLERowChanged(Me, New DAILYDOUBLERowChangeEvent(CType(e.Row,DAILYDOUBLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DAILYDOUBLERowChangingEvent) Is Nothing) Then
                RaiseEvent DAILYDOUBLERowChanging(Me, New DAILYDOUBLERowChangeEvent(CType(e.Row,DAILYDOUBLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DAILYDOUBLERowDeletedEvent) Is Nothing) Then
                RaiseEvent DAILYDOUBLERowDeleted(Me, New DAILYDOUBLERowChangeEvent(CType(e.Row,DAILYDOUBLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DAILYDOUBLERowDeletingEvent) Is Nothing) Then
                RaiseEvent DAILYDOUBLERowDeleting(Me, New DAILYDOUBLERowChangeEvent(CType(e.Row,DAILYDOUBLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveDAILYDOUBLERow(ByVal row As DAILYDOUBLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DAILYDOUBLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PERFECTADataTable
        Inherits Global.System.Data.TypedTableBase(Of PERFECTARow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnPERFECTA1A As Global.System.Data.DataColumn
        
        Private columnPERFECTA1B As Global.System.Data.DataColumn
        
        Private columnPERFECTA2A As Global.System.Data.DataColumn
        
        Private columnPERFECTA2B As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTA As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTB As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTC As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTD As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTE As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTF As Global.System.Data.DataColumn
        
        Private columnPERFECTAAMOUNTG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PERFECTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTA1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTA1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTA1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTA1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTA2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTA2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTA2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTA2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PERFECTAAMOUNTGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFECTAAMOUNTG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PERFECTARow
            Get
                Return CType(Me.Rows(index),PERFECTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERFECTARowChanging As PERFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERFECTARowChanged As PERFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERFECTARowDeleting As PERFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event PERFECTARowDeleted As PERFECTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPERFECTARow(ByVal row As PERFECTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPERFECTARow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_PERFECTA As RACEONDISPLAYRow, ByVal PERFECTA1A As String, ByVal PERFECTA1B As String, ByVal PERFECTA2A As String, ByVal PERFECTA2B As String, ByVal PERFECTAAMOUNTA As String, ByVal PERFECTAAMOUNTB As String, ByVal PERFECTAAMOUNTC As String, ByVal PERFECTAAMOUNTD As String, ByVal PERFECTAAMOUNTE As String, ByVal PERFECTAAMOUNTF As String, ByVal PERFECTAAMOUNTG As String) As PERFECTARow
            Dim rowPERFECTARow As PERFECTARow = CType(Me.NewRow,PERFECTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PERFECTA1A, PERFECTA1B, PERFECTA2A, PERFECTA2B, PERFECTAAMOUNTA, PERFECTAAMOUNTB, PERFECTAAMOUNTC, PERFECTAAMOUNTD, PERFECTAAMOUNTE, PERFECTAAMOUNTF, PERFECTAAMOUNTG}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_PERFECTA) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_PERFECTA(0)
            End If
            rowPERFECTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPERFECTARow)
            Return rowPERFECTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PERFECTADataTable = CType(MyBase.Clone,PERFECTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PERFECTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnPERFECTA1A = MyBase.Columns("PERFECTA1A")
            Me.columnPERFECTA1B = MyBase.Columns("PERFECTA1B")
            Me.columnPERFECTA2A = MyBase.Columns("PERFECTA2A")
            Me.columnPERFECTA2B = MyBase.Columns("PERFECTA2B")
            Me.columnPERFECTAAMOUNTA = MyBase.Columns("PERFECTAAMOUNTA")
            Me.columnPERFECTAAMOUNTB = MyBase.Columns("PERFECTAAMOUNTB")
            Me.columnPERFECTAAMOUNTC = MyBase.Columns("PERFECTAAMOUNTC")
            Me.columnPERFECTAAMOUNTD = MyBase.Columns("PERFECTAAMOUNTD")
            Me.columnPERFECTAAMOUNTE = MyBase.Columns("PERFECTAAMOUNTE")
            Me.columnPERFECTAAMOUNTF = MyBase.Columns("PERFECTAAMOUNTF")
            Me.columnPERFECTAAMOUNTG = MyBase.Columns("PERFECTAAMOUNTG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnPERFECTA1A = New Global.System.Data.DataColumn("PERFECTA1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTA1A)
            Me.columnPERFECTA1B = New Global.System.Data.DataColumn("PERFECTA1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTA1B)
            Me.columnPERFECTA2A = New Global.System.Data.DataColumn("PERFECTA2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTA2A)
            Me.columnPERFECTA2B = New Global.System.Data.DataColumn("PERFECTA2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTA2B)
            Me.columnPERFECTAAMOUNTA = New Global.System.Data.DataColumn("PERFECTAAMOUNTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTA)
            Me.columnPERFECTAAMOUNTB = New Global.System.Data.DataColumn("PERFECTAAMOUNTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTB)
            Me.columnPERFECTAAMOUNTC = New Global.System.Data.DataColumn("PERFECTAAMOUNTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTC)
            Me.columnPERFECTAAMOUNTD = New Global.System.Data.DataColumn("PERFECTAAMOUNTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTD)
            Me.columnPERFECTAAMOUNTE = New Global.System.Data.DataColumn("PERFECTAAMOUNTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTE)
            Me.columnPERFECTAAMOUNTF = New Global.System.Data.DataColumn("PERFECTAAMOUNTF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTF)
            Me.columnPERFECTAAMOUNTG = New Global.System.Data.DataColumn("PERFECTAAMOUNTG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFECTAAMOUNTG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPERFECTARow() As PERFECTARow
            Return CType(Me.NewRow,PERFECTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PERFECTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PERFECTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PERFECTARowChangedEvent) Is Nothing) Then
                RaiseEvent PERFECTARowChanged(Me, New PERFECTARowChangeEvent(CType(e.Row,PERFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PERFECTARowChangingEvent) Is Nothing) Then
                RaiseEvent PERFECTARowChanging(Me, New PERFECTARowChangeEvent(CType(e.Row,PERFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PERFECTARowDeletedEvent) Is Nothing) Then
                RaiseEvent PERFECTARowDeleted(Me, New PERFECTARowChangeEvent(CType(e.Row,PERFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PERFECTARowDeletingEvent) Is Nothing) Then
                RaiseEvent PERFECTARowDeleting(Me, New PERFECTARowChangeEvent(CType(e.Row,PERFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePERFECTARow(ByVal row As PERFECTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PERFECTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BET3DataTable
        Inherits Global.System.Data.TypedTableBase(Of BET3Row)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnBET1A As Global.System.Data.DataColumn
        
        Private columnBET1B As Global.System.Data.DataColumn
        
        Private columnBET2A As Global.System.Data.DataColumn
        
        Private columnBET2B As Global.System.Data.DataColumn
        
        Private columnBET3A As Global.System.Data.DataColumn
        
        Private columnBET3B As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTA As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTB As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTC As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTD As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTE As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTF As Global.System.Data.DataColumn
        
        Private columnBETAMOUNTG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BET3"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BET3BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBET3B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property BETAMOUNTGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBETAMOUNTG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BET3Row
            Get
                Return CType(Me.Rows(index),BET3Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BET3RowChanging As BET3RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BET3RowChanged As BET3RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BET3RowDeleting As BET3RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event BET3RowDeleted As BET3RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddBET3Row(ByVal row As BET3Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddBET3Row(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_BET3 As RACEONDISPLAYRow, ByVal BET1A As String, ByVal BET1B As String, ByVal BET2A As String, ByVal BET2B As String, ByVal BET3A As String, ByVal BET3B As String, ByVal BETAMOUNTA As String, ByVal BETAMOUNTB As String, ByVal BETAMOUNTC As String, ByVal BETAMOUNTD As String, ByVal BETAMOUNTE As String, ByVal BETAMOUNTF As String, ByVal BETAMOUNTG As String) As BET3Row
            Dim rowBET3Row As BET3Row = CType(Me.NewRow,BET3Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, BET1A, BET1B, BET2A, BET2B, BET3A, BET3B, BETAMOUNTA, BETAMOUNTB, BETAMOUNTC, BETAMOUNTD, BETAMOUNTE, BETAMOUNTF, BETAMOUNTG}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_BET3) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_BET3(0)
            End If
            rowBET3Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowBET3Row)
            Return rowBET3Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BET3DataTable = CType(MyBase.Clone,BET3DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BET3DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnBET1A = MyBase.Columns("BET1A")
            Me.columnBET1B = MyBase.Columns("BET1B")
            Me.columnBET2A = MyBase.Columns("BET2A")
            Me.columnBET2B = MyBase.Columns("BET2B")
            Me.columnBET3A = MyBase.Columns("BET3A")
            Me.columnBET3B = MyBase.Columns("BET3B")
            Me.columnBETAMOUNTA = MyBase.Columns("BETAMOUNTA")
            Me.columnBETAMOUNTB = MyBase.Columns("BETAMOUNTB")
            Me.columnBETAMOUNTC = MyBase.Columns("BETAMOUNTC")
            Me.columnBETAMOUNTD = MyBase.Columns("BETAMOUNTD")
            Me.columnBETAMOUNTE = MyBase.Columns("BETAMOUNTE")
            Me.columnBETAMOUNTF = MyBase.Columns("BETAMOUNTF")
            Me.columnBETAMOUNTG = MyBase.Columns("BETAMOUNTG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnBET1A = New Global.System.Data.DataColumn("BET1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET1A)
            Me.columnBET1B = New Global.System.Data.DataColumn("BET1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET1B)
            Me.columnBET2A = New Global.System.Data.DataColumn("BET2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET2A)
            Me.columnBET2B = New Global.System.Data.DataColumn("BET2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET2B)
            Me.columnBET3A = New Global.System.Data.DataColumn("BET3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET3A)
            Me.columnBET3B = New Global.System.Data.DataColumn("BET3B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBET3B)
            Me.columnBETAMOUNTA = New Global.System.Data.DataColumn("BETAMOUNTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTA)
            Me.columnBETAMOUNTB = New Global.System.Data.DataColumn("BETAMOUNTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTB)
            Me.columnBETAMOUNTC = New Global.System.Data.DataColumn("BETAMOUNTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTC)
            Me.columnBETAMOUNTD = New Global.System.Data.DataColumn("BETAMOUNTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTD)
            Me.columnBETAMOUNTE = New Global.System.Data.DataColumn("BETAMOUNTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTE)
            Me.columnBETAMOUNTF = New Global.System.Data.DataColumn("BETAMOUNTF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTF)
            Me.columnBETAMOUNTG = New Global.System.Data.DataColumn("BETAMOUNTG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBETAMOUNTG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewBET3Row() As BET3Row
            Return CType(Me.NewRow,BET3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BET3Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BET3Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BET3RowChangedEvent) Is Nothing) Then
                RaiseEvent BET3RowChanged(Me, New BET3RowChangeEvent(CType(e.Row,BET3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BET3RowChangingEvent) Is Nothing) Then
                RaiseEvent BET3RowChanging(Me, New BET3RowChangeEvent(CType(e.Row,BET3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BET3RowDeletedEvent) Is Nothing) Then
                RaiseEvent BET3RowDeleted(Me, New BET3RowChangeEvent(CType(e.Row,BET3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BET3RowDeletingEvent) Is Nothing) Then
                RaiseEvent BET3RowDeleting(Me, New BET3RowChangeEvent(CType(e.Row,BET3Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveBET3Row(ByVal row As BET3Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BET3DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TRIFECTADataTable
        Inherits Global.System.Data.TypedTableBase(Of TRIFECTARow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTRIFECTA1A As Global.System.Data.DataColumn
        
        Private columnTRIFECTA1B As Global.System.Data.DataColumn
        
        Private columnTRIFECTA2A As Global.System.Data.DataColumn
        
        Private columnTRIFECTA2B As Global.System.Data.DataColumn
        
        Private columnTRIFECTA3A As Global.System.Data.DataColumn
        
        Private columnTRIFECTA3B As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTA As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTB As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTC As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTD As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTE As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTF As Global.System.Data.DataColumn
        
        Private columnTRIFECTAAMOUNTG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TRIFECTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTA3BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTA3B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TRIFECTAAMOUNTGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRIFECTAAMOUNTG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TRIFECTARow
            Get
                Return CType(Me.Rows(index),TRIFECTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TRIFECTARowChanging As TRIFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TRIFECTARowChanged As TRIFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TRIFECTARowDeleting As TRIFECTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TRIFECTARowDeleted As TRIFECTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTRIFECTARow(ByVal row As TRIFECTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTRIFECTARow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_TRIFECTA As RACEONDISPLAYRow, ByVal TRIFECTA1A As String, ByVal TRIFECTA1B As String, ByVal TRIFECTA2A As String, ByVal TRIFECTA2B As String, ByVal TRIFECTA3A As String, ByVal TRIFECTA3B As String, ByVal TRIFECTAAMOUNTA As String, ByVal TRIFECTAAMOUNTB As String, ByVal TRIFECTAAMOUNTC As String, ByVal TRIFECTAAMOUNTD As String, ByVal TRIFECTAAMOUNTE As String, ByVal TRIFECTAAMOUNTF As String, ByVal TRIFECTAAMOUNTG As String) As TRIFECTARow
            Dim rowTRIFECTARow As TRIFECTARow = CType(Me.NewRow,TRIFECTARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TRIFECTA1A, TRIFECTA1B, TRIFECTA2A, TRIFECTA2B, TRIFECTA3A, TRIFECTA3B, TRIFECTAAMOUNTA, TRIFECTAAMOUNTB, TRIFECTAAMOUNTC, TRIFECTAAMOUNTD, TRIFECTAAMOUNTE, TRIFECTAAMOUNTF, TRIFECTAAMOUNTG}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_TRIFECTA) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_TRIFECTA(0)
            End If
            rowTRIFECTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTRIFECTARow)
            Return rowTRIFECTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TRIFECTADataTable = CType(MyBase.Clone,TRIFECTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TRIFECTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTRIFECTA1A = MyBase.Columns("TRIFECTA1A")
            Me.columnTRIFECTA1B = MyBase.Columns("TRIFECTA1B")
            Me.columnTRIFECTA2A = MyBase.Columns("TRIFECTA2A")
            Me.columnTRIFECTA2B = MyBase.Columns("TRIFECTA2B")
            Me.columnTRIFECTA3A = MyBase.Columns("TRIFECTA3A")
            Me.columnTRIFECTA3B = MyBase.Columns("TRIFECTA3B")
            Me.columnTRIFECTAAMOUNTA = MyBase.Columns("TRIFECTAAMOUNTA")
            Me.columnTRIFECTAAMOUNTB = MyBase.Columns("TRIFECTAAMOUNTB")
            Me.columnTRIFECTAAMOUNTC = MyBase.Columns("TRIFECTAAMOUNTC")
            Me.columnTRIFECTAAMOUNTD = MyBase.Columns("TRIFECTAAMOUNTD")
            Me.columnTRIFECTAAMOUNTE = MyBase.Columns("TRIFECTAAMOUNTE")
            Me.columnTRIFECTAAMOUNTF = MyBase.Columns("TRIFECTAAMOUNTF")
            Me.columnTRIFECTAAMOUNTG = MyBase.Columns("TRIFECTAAMOUNTG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTRIFECTA1A = New Global.System.Data.DataColumn("TRIFECTA1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA1A)
            Me.columnTRIFECTA1B = New Global.System.Data.DataColumn("TRIFECTA1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA1B)
            Me.columnTRIFECTA2A = New Global.System.Data.DataColumn("TRIFECTA2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA2A)
            Me.columnTRIFECTA2B = New Global.System.Data.DataColumn("TRIFECTA2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA2B)
            Me.columnTRIFECTA3A = New Global.System.Data.DataColumn("TRIFECTA3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA3A)
            Me.columnTRIFECTA3B = New Global.System.Data.DataColumn("TRIFECTA3B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTA3B)
            Me.columnTRIFECTAAMOUNTA = New Global.System.Data.DataColumn("TRIFECTAAMOUNTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTA)
            Me.columnTRIFECTAAMOUNTB = New Global.System.Data.DataColumn("TRIFECTAAMOUNTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTB)
            Me.columnTRIFECTAAMOUNTC = New Global.System.Data.DataColumn("TRIFECTAAMOUNTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTC)
            Me.columnTRIFECTAAMOUNTD = New Global.System.Data.DataColumn("TRIFECTAAMOUNTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTD)
            Me.columnTRIFECTAAMOUNTE = New Global.System.Data.DataColumn("TRIFECTAAMOUNTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTE)
            Me.columnTRIFECTAAMOUNTF = New Global.System.Data.DataColumn("TRIFECTAAMOUNTF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTF)
            Me.columnTRIFECTAAMOUNTG = New Global.System.Data.DataColumn("TRIFECTAAMOUNTG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRIFECTAAMOUNTG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTRIFECTARow() As TRIFECTARow
            Return CType(Me.NewRow,TRIFECTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TRIFECTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TRIFECTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TRIFECTARowChangedEvent) Is Nothing) Then
                RaiseEvent TRIFECTARowChanged(Me, New TRIFECTARowChangeEvent(CType(e.Row,TRIFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TRIFECTARowChangingEvent) Is Nothing) Then
                RaiseEvent TRIFECTARowChanging(Me, New TRIFECTARowChangeEvent(CType(e.Row,TRIFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TRIFECTARowDeletedEvent) Is Nothing) Then
                RaiseEvent TRIFECTARowDeleted(Me, New TRIFECTARowChangeEvent(CType(e.Row,TRIFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TRIFECTARowDeletingEvent) Is Nothing) Then
                RaiseEvent TRIFECTARowDeleting(Me, New TRIFECTARowChangeEvent(CType(e.Row,TRIFECTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTRIFECTARow(ByVal row As TRIFECTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TRIFECTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RACEONDISPLAYDataTable
        Inherits Global.System.Data.TypedTableBase(Of RACEONDISPLAYRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnRACENBRA As Global.System.Data.DataColumn
        
        Private columnRACENBRB As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RACEONDISPLAY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACENBRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACENBRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACENBRBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACENBRB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RACEONDISPLAYRow
            Get
                Return CType(Me.Rows(index),RACEONDISPLAYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACEONDISPLAYRowChanging As RACEONDISPLAYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACEONDISPLAYRowChanged As RACEONDISPLAYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACEONDISPLAYRowDeleting As RACEONDISPLAYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RACEONDISPLAYRowDeleted As RACEONDISPLAYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRACEONDISPLAYRow(ByVal row As RACEONDISPLAYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRACEONDISPLAYRow(ByVal RACEKEY As Integer, ByVal RACENBRA As String, ByVal RACENBRB As String) As RACEONDISPLAYRow
            Dim rowRACEONDISPLAYRow As RACEONDISPLAYRow = CType(Me.NewRow,RACEONDISPLAYRow)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, RACENBRA, RACENBRB}
            rowRACEONDISPLAYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRACEONDISPLAYRow)
            Return rowRACEONDISPLAYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindByRACEKEY(ByVal RACEKEY As Integer) As RACEONDISPLAYRow
            Return CType(Me.Rows.Find(New Object() {RACEKEY}),RACEONDISPLAYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RACEONDISPLAYDataTable = CType(MyBase.Clone,RACEONDISPLAYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RACEONDISPLAYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnRACENBRA = MyBase.Columns("RACENBRA")
            Me.columnRACENBRB = MyBase.Columns("RACENBRB")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnRACENBRA = New Global.System.Data.DataColumn("RACENBRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACENBRA)
            Me.columnRACENBRB = New Global.System.Data.DataColumn("RACENBRB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACENBRB)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnRACEKEY}, true))
            Me.columnRACEKEY.AllowDBNull = false
            Me.columnRACEKEY.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRACEONDISPLAYRow() As RACEONDISPLAYRow
            Return CType(Me.NewRow,RACEONDISPLAYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RACEONDISPLAYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RACEONDISPLAYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RACEONDISPLAYRowChangedEvent) Is Nothing) Then
                RaiseEvent RACEONDISPLAYRowChanged(Me, New RACEONDISPLAYRowChangeEvent(CType(e.Row,RACEONDISPLAYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RACEONDISPLAYRowChangingEvent) Is Nothing) Then
                RaiseEvent RACEONDISPLAYRowChanging(Me, New RACEONDISPLAYRowChangeEvent(CType(e.Row,RACEONDISPLAYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RACEONDISPLAYRowDeletedEvent) Is Nothing) Then
                RaiseEvent RACEONDISPLAYRowDeleted(Me, New RACEONDISPLAYRowChangeEvent(CType(e.Row,RACEONDISPLAYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RACEONDISPLAYRowDeletingEvent) Is Nothing) Then
                RaiseEvent RACEONDISPLAYRowDeleting(Me, New RACEONDISPLAYRowChangeEvent(CType(e.Row,RACEONDISPLAYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRACEONDISPLAYRow(ByVal row As RACEONDISPLAYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RACEONDISPLAYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MESSAGESDataTable
        Inherits Global.System.Data.TypedTableBase(Of MESSAGESRow)
        
        Private columnMESSAGE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MESSAGES"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MESSAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMESSAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MESSAGESRow
            Get
                Return CType(Me.Rows(index),MESSAGESRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MESSAGESRowChanging As MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MESSAGESRowChanged As MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MESSAGESRowDeleting As MESSAGESRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event MESSAGESRowDeleted As MESSAGESRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddMESSAGESRow(ByVal row As MESSAGESRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddMESSAGESRow(ByVal MESSAGE As String) As MESSAGESRow
            Dim rowMESSAGESRow As MESSAGESRow = CType(Me.NewRow,MESSAGESRow)
            Dim columnValuesArray() As Object = New Object() {MESSAGE}
            rowMESSAGESRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMESSAGESRow)
            Return rowMESSAGESRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MESSAGESDataTable = CType(MyBase.Clone,MESSAGESDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MESSAGESDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMESSAGE = MyBase.Columns("MESSAGE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMESSAGE = New Global.System.Data.DataColumn("MESSAGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMESSAGE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewMESSAGESRow() As MESSAGESRow
            Return CType(Me.NewRow,MESSAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MESSAGESRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MESSAGESRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MESSAGESRowChangedEvent) Is Nothing) Then
                RaiseEvent MESSAGESRowChanged(Me, New MESSAGESRowChangeEvent(CType(e.Row,MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MESSAGESRowChangingEvent) Is Nothing) Then
                RaiseEvent MESSAGESRowChanging(Me, New MESSAGESRowChangeEvent(CType(e.Row,MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MESSAGESRowDeletedEvent) Is Nothing) Then
                RaiseEvent MESSAGESRowDeleted(Me, New MESSAGESRowChangeEvent(CType(e.Row,MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MESSAGESRowDeletingEvent) Is Nothing) Then
                RaiseEvent MESSAGESRowDeleting(Me, New MESSAGESRowChangeEvent(CType(e.Row,MESSAGESRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveMESSAGESRow(ByVal row As MESSAGESRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MESSAGESDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STATUSDataTable
        Inherits Global.System.Data.TypedTableBase(Of STATUSRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnOFFICIAL As Global.System.Data.DataColumn
        
        Private columnDEADHEAT As Global.System.Data.DataColumn
        
        Private columnINQOBJ As Global.System.Data.DataColumn
        
        Private columnINQUIRY As Global.System.Data.DataColumn
        
        Private columnOBJECTION As Global.System.Data.DataColumn
        
        Private columnPHOTO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STATUS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OFFICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOFFICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DEADHEATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEADHEAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INQOBJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINQOBJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property INQUIRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINQUIRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OBJECTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBJECTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PHOTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHOTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STATUSRow
            Get
                Return CType(Me.Rows(index),STATUSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event STATUSRowChanging As STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event STATUSRowChanged As STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event STATUSRowDeleting As STATUSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event STATUSRowDeleted As STATUSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddSTATUSRow(ByVal row As STATUSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddSTATUSRow(ByVal parentRACEONDISPLAYRowByRACEONDISPLAY_STATUS As RACEONDISPLAYRow, ByVal OFFICIAL As Boolean, ByVal DEADHEAT As Boolean, ByVal INQOBJ As Boolean, ByVal INQUIRY As Boolean, ByVal OBJECTION As Boolean, ByVal PHOTO As Boolean) As STATUSRow
            Dim rowSTATUSRow As STATUSRow = CType(Me.NewRow,STATUSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, OFFICIAL, DEADHEAT, INQOBJ, INQUIRY, OBJECTION, PHOTO}
            If (Not (parentRACEONDISPLAYRowByRACEONDISPLAY_STATUS) Is Nothing) Then
                columnValuesArray(0) = parentRACEONDISPLAYRowByRACEONDISPLAY_STATUS(0)
            End If
            rowSTATUSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTATUSRow)
            Return rowSTATUSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STATUSDataTable = CType(MyBase.Clone,STATUSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STATUSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnOFFICIAL = MyBase.Columns("OFFICIAL")
            Me.columnDEADHEAT = MyBase.Columns("DEADHEAT")
            Me.columnINQOBJ = MyBase.Columns("INQOBJ")
            Me.columnINQUIRY = MyBase.Columns("INQUIRY")
            Me.columnOBJECTION = MyBase.Columns("OBJECTION")
            Me.columnPHOTO = MyBase.Columns("PHOTO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnOFFICIAL = New Global.System.Data.DataColumn("OFFICIAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOFFICIAL)
            Me.columnDEADHEAT = New Global.System.Data.DataColumn("DEADHEAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEADHEAT)
            Me.columnINQOBJ = New Global.System.Data.DataColumn("INQOBJ", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINQOBJ)
            Me.columnINQUIRY = New Global.System.Data.DataColumn("INQUIRY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINQUIRY)
            Me.columnOBJECTION = New Global.System.Data.DataColumn("OBJECTION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBJECTION)
            Me.columnPHOTO = New Global.System.Data.DataColumn("PHOTO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHOTO)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewSTATUSRow() As STATUSRow
            Return CType(Me.NewRow,STATUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STATUSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STATUSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STATUSRowChangedEvent) Is Nothing) Then
                RaiseEvent STATUSRowChanged(Me, New STATUSRowChangeEvent(CType(e.Row,STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STATUSRowChangingEvent) Is Nothing) Then
                RaiseEvent STATUSRowChanging(Me, New STATUSRowChangeEvent(CType(e.Row,STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STATUSRowDeletedEvent) Is Nothing) Then
                RaiseEvent STATUSRowDeleted(Me, New STATUSRowChangeEvent(CType(e.Row,STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STATUSRowDeletingEvent) Is Nothing) Then
                RaiseEvent STATUSRowDeleting(Me, New STATUSRowChangeEvent(CType(e.Row,STATUSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveSTATUSRow(ByVal row As STATUSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STATUSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TODDataTable
        Inherits Global.System.Data.TypedTableBase(Of TODRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTODA As Global.System.Data.DataColumn
        
        Private columnTODB As Global.System.Data.DataColumn
        
        Private columnTODC As Global.System.Data.DataColumn
        
        Private columnTODD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TOD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TODAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TODBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TODCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TODDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTODD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TODRow
            Get
                Return CType(Me.Rows(index),TODRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TODRowChanging As TODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TODRowChanged As TODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TODRowDeleting As TODRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TODRowDeleted As TODRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTODRow(ByVal row As TODRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTODRow(ByVal parentRACERowByRACE_TOD As RACERow, ByVal TODA As String, ByVal TODB As String, ByVal TODC As String, ByVal TODD As String) As TODRow
            Dim rowTODRow As TODRow = CType(Me.NewRow,TODRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TODA, TODB, TODC, TODD}
            If (Not (parentRACERowByRACE_TOD) Is Nothing) Then
                columnValuesArray(0) = parentRACERowByRACE_TOD(0)
            End If
            rowTODRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTODRow)
            Return rowTODRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TODDataTable = CType(MyBase.Clone,TODDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TODDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTODA = MyBase.Columns("TODA")
            Me.columnTODB = MyBase.Columns("TODB")
            Me.columnTODC = MyBase.Columns("TODC")
            Me.columnTODD = MyBase.Columns("TODD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTODA = New Global.System.Data.DataColumn("TODA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODA)
            Me.columnTODB = New Global.System.Data.DataColumn("TODB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODB)
            Me.columnTODC = New Global.System.Data.DataColumn("TODC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODC)
            Me.columnTODD = New Global.System.Data.DataColumn("TODD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTODD)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTODRow() As TODRow
            Return CType(Me.NewRow,TODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TODRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TODRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TODRowChangedEvent) Is Nothing) Then
                RaiseEvent TODRowChanged(Me, New TODRowChangeEvent(CType(e.Row,TODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TODRowChangingEvent) Is Nothing) Then
                RaiseEvent TODRowChanging(Me, New TODRowChangeEvent(CType(e.Row,TODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TODRowDeletedEvent) Is Nothing) Then
                RaiseEvent TODRowDeleted(Me, New TODRowChangeEvent(CType(e.Row,TODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TODRowDeletingEvent) Is Nothing) Then
                RaiseEvent TODRowDeleting(Me, New TODRowChangeEvent(CType(e.Row,TODRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTODRow(ByVal row As TODRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TODDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class POSTTIMEDataTable
        Inherits Global.System.Data.TypedTableBase(Of POSTTIMERow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnPTA As Global.System.Data.DataColumn
        
        Private columnPTB As Global.System.Data.DataColumn
        
        Private columnPTC As Global.System.Data.DataColumn
        
        Private columnPTD As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "POSTTIME"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As POSTTIMERow
            Get
                Return CType(Me.Rows(index),POSTTIMERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event POSTTIMERowChanging As POSTTIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event POSTTIMERowChanged As POSTTIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event POSTTIMERowDeleting As POSTTIMERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event POSTTIMERowDeleted As POSTTIMERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddPOSTTIMERow(ByVal row As POSTTIMERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddPOSTTIMERow(ByVal parentRACERowByRACE_POSTTIME As RACERow, ByVal PTA As String, ByVal PTB As String, ByVal PTC As String, ByVal PTD As String) As POSTTIMERow
            Dim rowPOSTTIMERow As POSTTIMERow = CType(Me.NewRow,POSTTIMERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PTA, PTB, PTC, PTD}
            If (Not (parentRACERowByRACE_POSTTIME) Is Nothing) Then
                columnValuesArray(0) = parentRACERowByRACE_POSTTIME(0)
            End If
            rowPOSTTIMERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPOSTTIMERow)
            Return rowPOSTTIMERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As POSTTIMEDataTable = CType(MyBase.Clone,POSTTIMEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New POSTTIMEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnPTA = MyBase.Columns("PTA")
            Me.columnPTB = MyBase.Columns("PTB")
            Me.columnPTC = MyBase.Columns("PTC")
            Me.columnPTD = MyBase.Columns("PTD")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnPTA = New Global.System.Data.DataColumn("PTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTA)
            Me.columnPTB = New Global.System.Data.DataColumn("PTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTB)
            Me.columnPTC = New Global.System.Data.DataColumn("PTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTC)
            Me.columnPTD = New Global.System.Data.DataColumn("PTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTD)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewPOSTTIMERow() As POSTTIMERow
            Return CType(Me.NewRow,POSTTIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New POSTTIMERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(POSTTIMERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.POSTTIMERowChangedEvent) Is Nothing) Then
                RaiseEvent POSTTIMERowChanged(Me, New POSTTIMERowChangeEvent(CType(e.Row,POSTTIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.POSTTIMERowChangingEvent) Is Nothing) Then
                RaiseEvent POSTTIMERowChanging(Me, New POSTTIMERowChangeEvent(CType(e.Row,POSTTIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.POSTTIMERowDeletedEvent) Is Nothing) Then
                RaiseEvent POSTTIMERowDeleted(Me, New POSTTIMERowChangeEvent(CType(e.Row,POSTTIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.POSTTIMERowDeletingEvent) Is Nothing) Then
                RaiseEvent POSTTIMERowDeleting(Me, New POSTTIMERowChangeEvent(CType(e.Row,POSTTIMERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemovePOSTTIMERow(ByVal row As POSTTIMERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "POSTTIMEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIMINGFINISHDataTable
        Inherits Global.System.Data.TypedTableBase(Of TIMINGFINISHRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTIMINGFINISHA As Global.System.Data.DataColumn
        
        Private columnTIMINGFINISHB As Global.System.Data.DataColumn
        
        Private columnTIMINGFINISHC As Global.System.Data.DataColumn
        
        Private columnTIMINGFINISHD As Global.System.Data.DataColumn
        
        Private columnTIMINGFINISHE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIMINGFINISH"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGFINISHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGFINISHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGFINISHBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGFINISHB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGFINISHCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGFINISHC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGFINISHDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGFINISHD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGFINISHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGFINISHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIMINGFINISHRow
            Get
                Return CType(Me.Rows(index),TIMINGFINISHRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGFINISHRowChanging As TIMINGFINISHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGFINISHRowChanged As TIMINGFINISHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGFINISHRowDeleting As TIMINGFINISHRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGFINISHRowDeleted As TIMINGFINISHRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTIMINGFINISHRow(ByVal row As TIMINGFINISHRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTIMINGFINISHRow(ByVal RACEKEY As Integer, ByVal TIMINGFINISHA As String, ByVal TIMINGFINISHB As String, ByVal TIMINGFINISHC As String, ByVal TIMINGFINISHD As String, ByVal TIMINGFINISHE As String) As TIMINGFINISHRow
            Dim rowTIMINGFINISHRow As TIMINGFINISHRow = CType(Me.NewRow,TIMINGFINISHRow)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, TIMINGFINISHA, TIMINGFINISHB, TIMINGFINISHC, TIMINGFINISHD, TIMINGFINISHE}
            rowTIMINGFINISHRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIMINGFINISHRow)
            Return rowTIMINGFINISHRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIMINGFINISHDataTable = CType(MyBase.Clone,TIMINGFINISHDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIMINGFINISHDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTIMINGFINISHA = MyBase.Columns("TIMINGFINISHA")
            Me.columnTIMINGFINISHB = MyBase.Columns("TIMINGFINISHB")
            Me.columnTIMINGFINISHC = MyBase.Columns("TIMINGFINISHC")
            Me.columnTIMINGFINISHD = MyBase.Columns("TIMINGFINISHD")
            Me.columnTIMINGFINISHE = MyBase.Columns("TIMINGFINISHE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTIMINGFINISHA = New Global.System.Data.DataColumn("TIMINGFINISHA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGFINISHA)
            Me.columnTIMINGFINISHB = New Global.System.Data.DataColumn("TIMINGFINISHB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGFINISHB)
            Me.columnTIMINGFINISHC = New Global.System.Data.DataColumn("TIMINGFINISHC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGFINISHC)
            Me.columnTIMINGFINISHD = New Global.System.Data.DataColumn("TIMINGFINISHD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGFINISHD)
            Me.columnTIMINGFINISHE = New Global.System.Data.DataColumn("TIMINGFINISHE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGFINISHE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTIMINGFINISHRow() As TIMINGFINISHRow
            Return CType(Me.NewRow,TIMINGFINISHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIMINGFINISHRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIMINGFINISHRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIMINGFINISHRowChangedEvent) Is Nothing) Then
                RaiseEvent TIMINGFINISHRowChanged(Me, New TIMINGFINISHRowChangeEvent(CType(e.Row,TIMINGFINISHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIMINGFINISHRowChangingEvent) Is Nothing) Then
                RaiseEvent TIMINGFINISHRowChanging(Me, New TIMINGFINISHRowChangeEvent(CType(e.Row,TIMINGFINISHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIMINGFINISHRowDeletedEvent) Is Nothing) Then
                RaiseEvent TIMINGFINISHRowDeleted(Me, New TIMINGFINISHRowChangeEvent(CType(e.Row,TIMINGFINISHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIMINGFINISHRowDeletingEvent) Is Nothing) Then
                RaiseEvent TIMINGFINISHRowDeleting(Me, New TIMINGFINISHRowChangeEvent(CType(e.Row,TIMINGFINISHRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTIMINGFINISHRow(ByVal row As TIMINGFINISHRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIMINGFINISHDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIMINGMILEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TIMINGMILERow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTIMINGMILEA As Global.System.Data.DataColumn
        
        Private columnTIMINGMILEB As Global.System.Data.DataColumn
        
        Private columnTIMINGMILEC As Global.System.Data.DataColumn
        
        Private columnTIMINGMILED As Global.System.Data.DataColumn
        
        Private columnTIMINGMILEE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIMINGMILE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGMILEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGMILEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGMILEBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGMILEB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGMILECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGMILEC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGMILEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGMILED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMINGMILEEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMINGMILEE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIMINGMILERow
            Get
                Return CType(Me.Rows(index),TIMINGMILERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGMILERowChanging As TIMINGMILERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGMILERowChanged As TIMINGMILERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGMILERowDeleting As TIMINGMILERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMINGMILERowDeleted As TIMINGMILERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTIMINGMILERow(ByVal row As TIMINGMILERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTIMINGMILERow(ByVal RACEKEY As Integer, ByVal TIMINGMILEA As String, ByVal TIMINGMILEB As String, ByVal TIMINGMILEC As String, ByVal TIMINGMILED As String, ByVal TIMINGMILEE As String) As TIMINGMILERow
            Dim rowTIMINGMILERow As TIMINGMILERow = CType(Me.NewRow,TIMINGMILERow)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, TIMINGMILEA, TIMINGMILEB, TIMINGMILEC, TIMINGMILED, TIMINGMILEE}
            rowTIMINGMILERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIMINGMILERow)
            Return rowTIMINGMILERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIMINGMILEDataTable = CType(MyBase.Clone,TIMINGMILEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIMINGMILEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTIMINGMILEA = MyBase.Columns("TIMINGMILEA")
            Me.columnTIMINGMILEB = MyBase.Columns("TIMINGMILEB")
            Me.columnTIMINGMILEC = MyBase.Columns("TIMINGMILEC")
            Me.columnTIMINGMILED = MyBase.Columns("TIMINGMILED")
            Me.columnTIMINGMILEE = MyBase.Columns("TIMINGMILEE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTIMINGMILEA = New Global.System.Data.DataColumn("TIMINGMILEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGMILEA)
            Me.columnTIMINGMILEB = New Global.System.Data.DataColumn("TIMINGMILEB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGMILEB)
            Me.columnTIMINGMILEC = New Global.System.Data.DataColumn("TIMINGMILEC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGMILEC)
            Me.columnTIMINGMILED = New Global.System.Data.DataColumn("TIMINGMILED", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGMILED)
            Me.columnTIMINGMILEE = New Global.System.Data.DataColumn("TIMINGMILEE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMINGMILEE)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTIMINGMILERow() As TIMINGMILERow
            Return CType(Me.NewRow,TIMINGMILERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIMINGMILERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIMINGMILERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIMINGMILERowChangedEvent) Is Nothing) Then
                RaiseEvent TIMINGMILERowChanged(Me, New TIMINGMILERowChangeEvent(CType(e.Row,TIMINGMILERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIMINGMILERowChangingEvent) Is Nothing) Then
                RaiseEvent TIMINGMILERowChanging(Me, New TIMINGMILERowChangeEvent(CType(e.Row,TIMINGMILERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIMINGMILERowDeletedEvent) Is Nothing) Then
                RaiseEvent TIMINGMILERowDeleted(Me, New TIMINGMILERowChangeEvent(CType(e.Row,TIMINGMILERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIMINGMILERowDeletingEvent) Is Nothing) Then
                RaiseEvent TIMINGMILERowDeleting(Me, New TIMINGMILERowChangeEvent(CType(e.Row,TIMINGMILERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTIMINGMILERow(ByVal row As TIMINGMILERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIMINGMILEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIMING34DataTable
        Inherits Global.System.Data.TypedTableBase(Of TIMING34Row)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTIMING34A As Global.System.Data.DataColumn
        
        Private columnTIMING34B As Global.System.Data.DataColumn
        
        Private columnTIMING34C As Global.System.Data.DataColumn
        
        Private columnTIMING34D As Global.System.Data.DataColumn
        
        Private columnTIMING34E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIMING34"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING34AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING34A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING34BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING34B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING34CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING34C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING34DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING34D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING34EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING34E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIMING34Row
            Get
                Return CType(Me.Rows(index),TIMING34Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING34RowChanging As TIMING34RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING34RowChanged As TIMING34RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING34RowDeleting As TIMING34RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING34RowDeleted As TIMING34RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTIMING34Row(ByVal row As TIMING34Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTIMING34Row(ByVal RACEKEY As Integer, ByVal TIMING34A As String, ByVal TIMING34B As String, ByVal TIMING34C As String, ByVal TIMING34D As String, ByVal TIMING34E As String) As TIMING34Row
            Dim rowTIMING34Row As TIMING34Row = CType(Me.NewRow,TIMING34Row)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, TIMING34A, TIMING34B, TIMING34C, TIMING34D, TIMING34E}
            rowTIMING34Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIMING34Row)
            Return rowTIMING34Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIMING34DataTable = CType(MyBase.Clone,TIMING34DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIMING34DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTIMING34A = MyBase.Columns("TIMING34A")
            Me.columnTIMING34B = MyBase.Columns("TIMING34B")
            Me.columnTIMING34C = MyBase.Columns("TIMING34C")
            Me.columnTIMING34D = MyBase.Columns("TIMING34D")
            Me.columnTIMING34E = MyBase.Columns("TIMING34E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTIMING34A = New Global.System.Data.DataColumn("TIMING34A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING34A)
            Me.columnTIMING34B = New Global.System.Data.DataColumn("TIMING34B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING34B)
            Me.columnTIMING34C = New Global.System.Data.DataColumn("TIMING34C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING34C)
            Me.columnTIMING34D = New Global.System.Data.DataColumn("TIMING34D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING34D)
            Me.columnTIMING34E = New Global.System.Data.DataColumn("TIMING34E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING34E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTIMING34Row() As TIMING34Row
            Return CType(Me.NewRow,TIMING34Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIMING34Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIMING34Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIMING34RowChangedEvent) Is Nothing) Then
                RaiseEvent TIMING34RowChanged(Me, New TIMING34RowChangeEvent(CType(e.Row,TIMING34Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIMING34RowChangingEvent) Is Nothing) Then
                RaiseEvent TIMING34RowChanging(Me, New TIMING34RowChangeEvent(CType(e.Row,TIMING34Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIMING34RowDeletedEvent) Is Nothing) Then
                RaiseEvent TIMING34RowDeleted(Me, New TIMING34RowChangeEvent(CType(e.Row,TIMING34Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIMING34RowDeletingEvent) Is Nothing) Then
                RaiseEvent TIMING34RowDeleting(Me, New TIMING34RowChangeEvent(CType(e.Row,TIMING34Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTIMING34Row(ByVal row As TIMING34Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIMING34DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIMING12DataTable
        Inherits Global.System.Data.TypedTableBase(Of TIMING12Row)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTIMING12A As Global.System.Data.DataColumn
        
        Private columnTIMING12B As Global.System.Data.DataColumn
        
        Private columnTIMING12C As Global.System.Data.DataColumn
        
        Private columnTIMING12D As Global.System.Data.DataColumn
        
        Private columnTIMING12E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIMING12"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING12AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING12A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING12BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING12B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING12CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING12C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING12DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING12D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING12EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING12E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIMING12Row
            Get
                Return CType(Me.Rows(index),TIMING12Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING12RowChanging As TIMING12RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING12RowChanged As TIMING12RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING12RowDeleting As TIMING12RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING12RowDeleted As TIMING12RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTIMING12Row(ByVal row As TIMING12Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTIMING12Row(ByVal RACEKEY As Integer, ByVal TIMING12A As String, ByVal TIMING12B As String, ByVal TIMING12C As String, ByVal TIMING12D As String, ByVal TIMING12E As String) As TIMING12Row
            Dim rowTIMING12Row As TIMING12Row = CType(Me.NewRow,TIMING12Row)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, TIMING12A, TIMING12B, TIMING12C, TIMING12D, TIMING12E}
            rowTIMING12Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIMING12Row)
            Return rowTIMING12Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIMING12DataTable = CType(MyBase.Clone,TIMING12DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIMING12DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTIMING12A = MyBase.Columns("TIMING12A")
            Me.columnTIMING12B = MyBase.Columns("TIMING12B")
            Me.columnTIMING12C = MyBase.Columns("TIMING12C")
            Me.columnTIMING12D = MyBase.Columns("TIMING12D")
            Me.columnTIMING12E = MyBase.Columns("TIMING12E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTIMING12A = New Global.System.Data.DataColumn("TIMING12A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING12A)
            Me.columnTIMING12B = New Global.System.Data.DataColumn("TIMING12B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING12B)
            Me.columnTIMING12C = New Global.System.Data.DataColumn("TIMING12C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING12C)
            Me.columnTIMING12D = New Global.System.Data.DataColumn("TIMING12D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING12D)
            Me.columnTIMING12E = New Global.System.Data.DataColumn("TIMING12E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING12E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTIMING12Row() As TIMING12Row
            Return CType(Me.NewRow,TIMING12Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIMING12Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIMING12Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIMING12RowChangedEvent) Is Nothing) Then
                RaiseEvent TIMING12RowChanged(Me, New TIMING12RowChangeEvent(CType(e.Row,TIMING12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIMING12RowChangingEvent) Is Nothing) Then
                RaiseEvent TIMING12RowChanging(Me, New TIMING12RowChangeEvent(CType(e.Row,TIMING12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIMING12RowDeletedEvent) Is Nothing) Then
                RaiseEvent TIMING12RowDeleted(Me, New TIMING12RowChangeEvent(CType(e.Row,TIMING12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIMING12RowDeletingEvent) Is Nothing) Then
                RaiseEvent TIMING12RowDeleting(Me, New TIMING12RowChangeEvent(CType(e.Row,TIMING12Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTIMING12Row(ByVal row As TIMING12Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIMING12DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIMING14DataTable
        Inherits Global.System.Data.TypedTableBase(Of TIMING14Row)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnTIMING14A As Global.System.Data.DataColumn
        
        Private columnTIMING14B As Global.System.Data.DataColumn
        
        Private columnTIMING14C As Global.System.Data.DataColumn
        
        Private columnTIMING14D As Global.System.Data.DataColumn
        
        Private columnTIMING14E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIMING14"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING14AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING14A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING14BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING14B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING14CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING14C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING14DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING14D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TIMING14EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIMING14E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIMING14Row
            Get
                Return CType(Me.Rows(index),TIMING14Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING14RowChanging As TIMING14RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING14RowChanged As TIMING14RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING14RowDeleting As TIMING14RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event TIMING14RowDeleted As TIMING14RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddTIMING14Row(ByVal row As TIMING14Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddTIMING14Row(ByVal RACEKEY As Integer, ByVal TIMING14A As String, ByVal TIMING14B As String, ByVal TIMING14C As String, ByVal TIMING14D As String, ByVal TIMING14E As String) As TIMING14Row
            Dim rowTIMING14Row As TIMING14Row = CType(Me.NewRow,TIMING14Row)
            Dim columnValuesArray() As Object = New Object() {RACEKEY, TIMING14A, TIMING14B, TIMING14C, TIMING14D, TIMING14E}
            rowTIMING14Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIMING14Row)
            Return rowTIMING14Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIMING14DataTable = CType(MyBase.Clone,TIMING14DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIMING14DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnTIMING14A = MyBase.Columns("TIMING14A")
            Me.columnTIMING14B = MyBase.Columns("TIMING14B")
            Me.columnTIMING14C = MyBase.Columns("TIMING14C")
            Me.columnTIMING14D = MyBase.Columns("TIMING14D")
            Me.columnTIMING14E = MyBase.Columns("TIMING14E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnTIMING14A = New Global.System.Data.DataColumn("TIMING14A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING14A)
            Me.columnTIMING14B = New Global.System.Data.DataColumn("TIMING14B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING14B)
            Me.columnTIMING14C = New Global.System.Data.DataColumn("TIMING14C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING14C)
            Me.columnTIMING14D = New Global.System.Data.DataColumn("TIMING14D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING14D)
            Me.columnTIMING14E = New Global.System.Data.DataColumn("TIMING14E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIMING14E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewTIMING14Row() As TIMING14Row
            Return CType(Me.NewRow,TIMING14Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIMING14Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIMING14Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIMING14RowChangedEvent) Is Nothing) Then
                RaiseEvent TIMING14RowChanged(Me, New TIMING14RowChangeEvent(CType(e.Row,TIMING14Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIMING14RowChangingEvent) Is Nothing) Then
                RaiseEvent TIMING14RowChanging(Me, New TIMING14RowChangeEvent(CType(e.Row,TIMING14Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIMING14RowDeletedEvent) Is Nothing) Then
                RaiseEvent TIMING14RowDeleted(Me, New TIMING14RowChangeEvent(CType(e.Row,TIMING14Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIMING14RowDeletingEvent) Is Nothing) Then
                RaiseEvent TIMING14RowDeleting(Me, New TIMING14RowChangeEvent(CType(e.Row,TIMING14Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveTIMING14Row(ByVal row As TIMING14Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIMING14DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class EXOTICSDataTable
        Inherits Global.System.Data.TypedTableBase(Of EXOTICSRow)
        
        Private columnRACEKEY As Global.System.Data.DataColumn
        
        Private columnPOOLTYPEA As Global.System.Data.DataColumn
        
        Private columnPOOLTOTA As Global.System.Data.DataColumn
        
        Private columnPOOLTOTB As Global.System.Data.DataColumn
        
        Private columnPOOLTOTC As Global.System.Data.DataColumn
        
        Private columnPOOLTOTD As Global.System.Data.DataColumn
        
        Private columnPOOLTOTE As Global.System.Data.DataColumn
        
        Private columnPOOLTOTF As Global.System.Data.DataColumn
        
        Private columnPOOL1A As Global.System.Data.DataColumn
        
        Private columnPOOL1B As Global.System.Data.DataColumn
        
        Private columnPOOL1C As Global.System.Data.DataColumn
        
        Private columnPOOL1D As Global.System.Data.DataColumn
        
        Private columnPOOL1E As Global.System.Data.DataColumn
        
        Private columnPOOL2A As Global.System.Data.DataColumn
        
        Private columnPOOL2B As Global.System.Data.DataColumn
        
        Private columnPOOL2C As Global.System.Data.DataColumn
        
        Private columnPOOL2D As Global.System.Data.DataColumn
        
        Private columnPOOL2E As Global.System.Data.DataColumn
        
        Private columnPOOL3A As Global.System.Data.DataColumn
        
        Private columnPOOL3B As Global.System.Data.DataColumn
        
        Private columnPOOL3C As Global.System.Data.DataColumn
        
        Private columnPOOL3D As Global.System.Data.DataColumn
        
        Private columnPOOL3E As Global.System.Data.DataColumn
        
        Private columnPOOL4A As Global.System.Data.DataColumn
        
        Private columnPOOL4B As Global.System.Data.DataColumn
        
        Private columnPOOL4C As Global.System.Data.DataColumn
        
        Private columnPOOL4D As Global.System.Data.DataColumn
        
        Private columnPOOL4E As Global.System.Data.DataColumn
        
        Private columnPOOL5A As Global.System.Data.DataColumn
        
        Private columnPOOL5B As Global.System.Data.DataColumn
        
        Private columnPOOL5C As Global.System.Data.DataColumn
        
        Private columnPOOL5D As Global.System.Data.DataColumn
        
        Private columnPOOL5E As Global.System.Data.DataColumn
        
        Private columnPOOL6A As Global.System.Data.DataColumn
        
        Private columnPOOL6B As Global.System.Data.DataColumn
        
        Private columnPOOL6C As Global.System.Data.DataColumn
        
        Private columnPOOL6D As Global.System.Data.DataColumn
        
        Private columnPOOL6E As Global.System.Data.DataColumn
        
        Private columnPOOL7A As Global.System.Data.DataColumn
        
        Private columnPOOL7B As Global.System.Data.DataColumn
        
        Private columnPOOL7C As Global.System.Data.DataColumn
        
        Private columnPOOL7D As Global.System.Data.DataColumn
        
        Private columnPOOL7E As Global.System.Data.DataColumn
        
        Private columnPOOL8A As Global.System.Data.DataColumn
        
        Private columnPOOL8B As Global.System.Data.DataColumn
        
        Private columnPOOL8C As Global.System.Data.DataColumn
        
        Private columnPOOL8D As Global.System.Data.DataColumn
        
        Private columnPOOL8E As Global.System.Data.DataColumn
        
        Private columnPOOL9A As Global.System.Data.DataColumn
        
        Private columnPOOL9B As Global.System.Data.DataColumn
        
        Private columnPOOL9C As Global.System.Data.DataColumn
        
        Private columnPOOL9D As Global.System.Data.DataColumn
        
        Private columnPOOL9E As Global.System.Data.DataColumn
        
        Private columnPOOL10A As Global.System.Data.DataColumn
        
        Private columnPOOL10B As Global.System.Data.DataColumn
        
        Private columnPOOL10C As Global.System.Data.DataColumn
        
        Private columnPOOL10D As Global.System.Data.DataColumn
        
        Private columnPOOL10E As Global.System.Data.DataColumn
        
        Private columnPOOL11A As Global.System.Data.DataColumn
        
        Private columnPOOL11B As Global.System.Data.DataColumn
        
        Private columnPOOL11C As Global.System.Data.DataColumn
        
        Private columnPOOL11D As Global.System.Data.DataColumn
        
        Private columnPOOL11E As Global.System.Data.DataColumn
        
        Private columnPOOL12A As Global.System.Data.DataColumn
        
        Private columnPOOL12B As Global.System.Data.DataColumn
        
        Private columnPOOL12C As Global.System.Data.DataColumn
        
        Private columnPOOL12D As Global.System.Data.DataColumn
        
        Private columnPOOL12E As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "EXOTICS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RACEKEYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRACEKEY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTYPEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTYPEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOLTOTFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOLTOTF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL1AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL1A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL1BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL1B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL1CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL1C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL1DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL1D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL1EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL1E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL2AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL2A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL2BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL2B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL2CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL2C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL2D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL2EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL2E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL3AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL3A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL3BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL3B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL3CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL3C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL3DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL3D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL3EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL3E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL4AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL4A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL4BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL4B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL4CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL4C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL4DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL4D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL4EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL4E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL5AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL5A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL5BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL5B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL5CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL5C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL5DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL5D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL5EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL5E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL6AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL6A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL6BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL6B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL6CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL6C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL6DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL6D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL6EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL6E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL7AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL7A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL7BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL7B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL7CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL7C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL7DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL7D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL7EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL7E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL8AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL8A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL8BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL8B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL8CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL8C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL8DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL8D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL8EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL8E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL9AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL9A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL9BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL9B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL9CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL9C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL9DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL9D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL9EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL9E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL10AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL10A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL10BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL10B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL10CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL10C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL10DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL10D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL10EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL10E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL11AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL11A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL11BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL11B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL11CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL11C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL11DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL11D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL11EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL11E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL12AColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL12A
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL12BColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL12B
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL12CColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL12C
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL12DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL12D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property POOL12EColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOOL12E
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As EXOTICSRow
            Get
                Return CType(Me.Rows(index),EXOTICSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EXOTICSRowChanging As EXOTICSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EXOTICSRowChanged As EXOTICSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EXOTICSRowDeleting As EXOTICSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event EXOTICSRowDeleted As EXOTICSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddEXOTICSRow(ByVal row As EXOTICSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddEXOTICSRow( _
                    ByVal parentRACERowByRACE_EXOTICS As RACERow,  _
                    ByVal POOLTYPEA As String,  _
                    ByVal POOLTOTA As String,  _
                    ByVal POOLTOTB As String,  _
                    ByVal POOLTOTC As String,  _
                    ByVal POOLTOTD As String,  _
                    ByVal POOLTOTE As String,  _
                    ByVal POOLTOTF As String,  _
                    ByVal POOL1A As String,  _
                    ByVal POOL1B As String,  _
                    ByVal POOL1C As String,  _
                    ByVal POOL1D As String,  _
                    ByVal POOL1E As String,  _
                    ByVal POOL2A As String,  _
                    ByVal POOL2B As String,  _
                    ByVal POOL2C As String,  _
                    ByVal POOL2D As String,  _
                    ByVal POOL2E As String,  _
                    ByVal POOL3A As String,  _
                    ByVal POOL3B As String,  _
                    ByVal POOL3C As String,  _
                    ByVal POOL3D As String,  _
                    ByVal POOL3E As String,  _
                    ByVal POOL4A As String,  _
                    ByVal POOL4B As String,  _
                    ByVal POOL4C As String,  _
                    ByVal POOL4D As String,  _
                    ByVal POOL4E As String,  _
                    ByVal POOL5A As String,  _
                    ByVal POOL5B As String,  _
                    ByVal POOL5C As String,  _
                    ByVal POOL5D As String,  _
                    ByVal POOL5E As String,  _
                    ByVal POOL6A As String,  _
                    ByVal POOL6B As String,  _
                    ByVal POOL6C As String,  _
                    ByVal POOL6D As String,  _
                    ByVal POOL6E As String,  _
                    ByVal POOL7A As String,  _
                    ByVal POOL7B As String,  _
                    ByVal POOL7C As String,  _
                    ByVal POOL7D As String,  _
                    ByVal POOL7E As String,  _
                    ByVal POOL8A As String,  _
                    ByVal POOL8B As String,  _
                    ByVal POOL8C As String,  _
                    ByVal POOL8D As String,  _
                    ByVal POOL8E As String,  _
                    ByVal POOL9A As String,  _
                    ByVal POOL9B As String,  _
                    ByVal POOL9C As String,  _
                    ByVal POOL9D As String,  _
                    ByVal POOL9E As String,  _
                    ByVal POOL10A As String,  _
                    ByVal POOL10B As String,  _
                    ByVal POOL10C As String,  _
                    ByVal POOL10D As String,  _
                    ByVal POOL10E As String,  _
                    ByVal POOL11A As String,  _
                    ByVal POOL11B As String,  _
                    ByVal POOL11C As String,  _
                    ByVal POOL11D As String,  _
                    ByVal POOL11E As String,  _
                    ByVal POOL12A As String,  _
                    ByVal POOL12B As String,  _
                    ByVal POOL12C As String,  _
                    ByVal POOL12D As String,  _
                    ByVal POOL12E As String) As EXOTICSRow
            Dim rowEXOTICSRow As EXOTICSRow = CType(Me.NewRow,EXOTICSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, POOLTYPEA, POOLTOTA, POOLTOTB, POOLTOTC, POOLTOTD, POOLTOTE, POOLTOTF, POOL1A, POOL1B, POOL1C, POOL1D, POOL1E, POOL2A, POOL2B, POOL2C, POOL2D, POOL2E, POOL3A, POOL3B, POOL3C, POOL3D, POOL3E, POOL4A, POOL4B, POOL4C, POOL4D, POOL4E, POOL5A, POOL5B, POOL5C, POOL5D, POOL5E, POOL6A, POOL6B, POOL6C, POOL6D, POOL6E, POOL7A, POOL7B, POOL7C, POOL7D, POOL7E, POOL8A, POOL8B, POOL8C, POOL8D, POOL8E, POOL9A, POOL9B, POOL9C, POOL9D, POOL9E, POOL10A, POOL10B, POOL10C, POOL10D, POOL10E, POOL11A, POOL11B, POOL11C, POOL11D, POOL11E, POOL12A, POOL12B, POOL12C, POOL12D, POOL12E}
            If (Not (parentRACERowByRACE_EXOTICS) Is Nothing) Then
                columnValuesArray(0) = parentRACERowByRACE_EXOTICS(0)
            End If
            rowEXOTICSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowEXOTICSRow)
            Return rowEXOTICSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As EXOTICSDataTable = CType(MyBase.Clone,EXOTICSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New EXOTICSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRACEKEY = MyBase.Columns("RACEKEY")
            Me.columnPOOLTYPEA = MyBase.Columns("POOLTYPEA")
            Me.columnPOOLTOTA = MyBase.Columns("POOLTOTA")
            Me.columnPOOLTOTB = MyBase.Columns("POOLTOTB")
            Me.columnPOOLTOTC = MyBase.Columns("POOLTOTC")
            Me.columnPOOLTOTD = MyBase.Columns("POOLTOTD")
            Me.columnPOOLTOTE = MyBase.Columns("POOLTOTE")
            Me.columnPOOLTOTF = MyBase.Columns("POOLTOTF")
            Me.columnPOOL1A = MyBase.Columns("POOL1A")
            Me.columnPOOL1B = MyBase.Columns("POOL1B")
            Me.columnPOOL1C = MyBase.Columns("POOL1C")
            Me.columnPOOL1D = MyBase.Columns("POOL1D")
            Me.columnPOOL1E = MyBase.Columns("POOL1E")
            Me.columnPOOL2A = MyBase.Columns("POOL2A")
            Me.columnPOOL2B = MyBase.Columns("POOL2B")
            Me.columnPOOL2C = MyBase.Columns("POOL2C")
            Me.columnPOOL2D = MyBase.Columns("POOL2D")
            Me.columnPOOL2E = MyBase.Columns("POOL2E")
            Me.columnPOOL3A = MyBase.Columns("POOL3A")
            Me.columnPOOL3B = MyBase.Columns("POOL3B")
            Me.columnPOOL3C = MyBase.Columns("POOL3C")
            Me.columnPOOL3D = MyBase.Columns("POOL3D")
            Me.columnPOOL3E = MyBase.Columns("POOL3E")
            Me.columnPOOL4A = MyBase.Columns("POOL4A")
            Me.columnPOOL4B = MyBase.Columns("POOL4B")
            Me.columnPOOL4C = MyBase.Columns("POOL4C")
            Me.columnPOOL4D = MyBase.Columns("POOL4D")
            Me.columnPOOL4E = MyBase.Columns("POOL4E")
            Me.columnPOOL5A = MyBase.Columns("POOL5A")
            Me.columnPOOL5B = MyBase.Columns("POOL5B")
            Me.columnPOOL5C = MyBase.Columns("POOL5C")
            Me.columnPOOL5D = MyBase.Columns("POOL5D")
            Me.columnPOOL5E = MyBase.Columns("POOL5E")
            Me.columnPOOL6A = MyBase.Columns("POOL6A")
            Me.columnPOOL6B = MyBase.Columns("POOL6B")
            Me.columnPOOL6C = MyBase.Columns("POOL6C")
            Me.columnPOOL6D = MyBase.Columns("POOL6D")
            Me.columnPOOL6E = MyBase.Columns("POOL6E")
            Me.columnPOOL7A = MyBase.Columns("POOL7A")
            Me.columnPOOL7B = MyBase.Columns("POOL7B")
            Me.columnPOOL7C = MyBase.Columns("POOL7C")
            Me.columnPOOL7D = MyBase.Columns("POOL7D")
            Me.columnPOOL7E = MyBase.Columns("POOL7E")
            Me.columnPOOL8A = MyBase.Columns("POOL8A")
            Me.columnPOOL8B = MyBase.Columns("POOL8B")
            Me.columnPOOL8C = MyBase.Columns("POOL8C")
            Me.columnPOOL8D = MyBase.Columns("POOL8D")
            Me.columnPOOL8E = MyBase.Columns("POOL8E")
            Me.columnPOOL9A = MyBase.Columns("POOL9A")
            Me.columnPOOL9B = MyBase.Columns("POOL9B")
            Me.columnPOOL9C = MyBase.Columns("POOL9C")
            Me.columnPOOL9D = MyBase.Columns("POOL9D")
            Me.columnPOOL9E = MyBase.Columns("POOL9E")
            Me.columnPOOL10A = MyBase.Columns("POOL10A")
            Me.columnPOOL10B = MyBase.Columns("POOL10B")
            Me.columnPOOL10C = MyBase.Columns("POOL10C")
            Me.columnPOOL10D = MyBase.Columns("POOL10D")
            Me.columnPOOL10E = MyBase.Columns("POOL10E")
            Me.columnPOOL11A = MyBase.Columns("POOL11A")
            Me.columnPOOL11B = MyBase.Columns("POOL11B")
            Me.columnPOOL11C = MyBase.Columns("POOL11C")
            Me.columnPOOL11D = MyBase.Columns("POOL11D")
            Me.columnPOOL11E = MyBase.Columns("POOL11E")
            Me.columnPOOL12A = MyBase.Columns("POOL12A")
            Me.columnPOOL12B = MyBase.Columns("POOL12B")
            Me.columnPOOL12C = MyBase.Columns("POOL12C")
            Me.columnPOOL12D = MyBase.Columns("POOL12D")
            Me.columnPOOL12E = MyBase.Columns("POOL12E")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRACEKEY = New Global.System.Data.DataColumn("RACEKEY", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRACEKEY)
            Me.columnPOOLTYPEA = New Global.System.Data.DataColumn("POOLTYPEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTYPEA)
            Me.columnPOOLTOTA = New Global.System.Data.DataColumn("POOLTOTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTA)
            Me.columnPOOLTOTB = New Global.System.Data.DataColumn("POOLTOTB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTB)
            Me.columnPOOLTOTC = New Global.System.Data.DataColumn("POOLTOTC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTC)
            Me.columnPOOLTOTD = New Global.System.Data.DataColumn("POOLTOTD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTD)
            Me.columnPOOLTOTE = New Global.System.Data.DataColumn("POOLTOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTE)
            Me.columnPOOLTOTF = New Global.System.Data.DataColumn("POOLTOTF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOLTOTF)
            Me.columnPOOL1A = New Global.System.Data.DataColumn("POOL1A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL1A)
            Me.columnPOOL1B = New Global.System.Data.DataColumn("POOL1B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL1B)
            Me.columnPOOL1C = New Global.System.Data.DataColumn("POOL1C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL1C)
            Me.columnPOOL1D = New Global.System.Data.DataColumn("POOL1D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL1D)
            Me.columnPOOL1E = New Global.System.Data.DataColumn("POOL1E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL1E)
            Me.columnPOOL2A = New Global.System.Data.DataColumn("POOL2A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL2A)
            Me.columnPOOL2B = New Global.System.Data.DataColumn("POOL2B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL2B)
            Me.columnPOOL2C = New Global.System.Data.DataColumn("POOL2C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL2C)
            Me.columnPOOL2D = New Global.System.Data.DataColumn("POOL2D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL2D)
            Me.columnPOOL2E = New Global.System.Data.DataColumn("POOL2E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL2E)
            Me.columnPOOL3A = New Global.System.Data.DataColumn("POOL3A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL3A)
            Me.columnPOOL3B = New Global.System.Data.DataColumn("POOL3B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL3B)
            Me.columnPOOL3C = New Global.System.Data.DataColumn("POOL3C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL3C)
            Me.columnPOOL3D = New Global.System.Data.DataColumn("POOL3D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL3D)
            Me.columnPOOL3E = New Global.System.Data.DataColumn("POOL3E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL3E)
            Me.columnPOOL4A = New Global.System.Data.DataColumn("POOL4A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL4A)
            Me.columnPOOL4B = New Global.System.Data.DataColumn("POOL4B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL4B)
            Me.columnPOOL4C = New Global.System.Data.DataColumn("POOL4C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL4C)
            Me.columnPOOL4D = New Global.System.Data.DataColumn("POOL4D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL4D)
            Me.columnPOOL4E = New Global.System.Data.DataColumn("POOL4E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL4E)
            Me.columnPOOL5A = New Global.System.Data.DataColumn("POOL5A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL5A)
            Me.columnPOOL5B = New Global.System.Data.DataColumn("POOL5B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL5B)
            Me.columnPOOL5C = New Global.System.Data.DataColumn("POOL5C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL5C)
            Me.columnPOOL5D = New Global.System.Data.DataColumn("POOL5D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL5D)
            Me.columnPOOL5E = New Global.System.Data.DataColumn("POOL5E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL5E)
            Me.columnPOOL6A = New Global.System.Data.DataColumn("POOL6A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL6A)
            Me.columnPOOL6B = New Global.System.Data.DataColumn("POOL6B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL6B)
            Me.columnPOOL6C = New Global.System.Data.DataColumn("POOL6C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL6C)
            Me.columnPOOL6D = New Global.System.Data.DataColumn("POOL6D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL6D)
            Me.columnPOOL6E = New Global.System.Data.DataColumn("POOL6E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL6E)
            Me.columnPOOL7A = New Global.System.Data.DataColumn("POOL7A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL7A)
            Me.columnPOOL7B = New Global.System.Data.DataColumn("POOL7B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL7B)
            Me.columnPOOL7C = New Global.System.Data.DataColumn("POOL7C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL7C)
            Me.columnPOOL7D = New Global.System.Data.DataColumn("POOL7D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL7D)
            Me.columnPOOL7E = New Global.System.Data.DataColumn("POOL7E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL7E)
            Me.columnPOOL8A = New Global.System.Data.DataColumn("POOL8A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL8A)
            Me.columnPOOL8B = New Global.System.Data.DataColumn("POOL8B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL8B)
            Me.columnPOOL8C = New Global.System.Data.DataColumn("POOL8C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL8C)
            Me.columnPOOL8D = New Global.System.Data.DataColumn("POOL8D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL8D)
            Me.columnPOOL8E = New Global.System.Data.DataColumn("POOL8E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL8E)
            Me.columnPOOL9A = New Global.System.Data.DataColumn("POOL9A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL9A)
            Me.columnPOOL9B = New Global.System.Data.DataColumn("POOL9B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL9B)
            Me.columnPOOL9C = New Global.System.Data.DataColumn("POOL9C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL9C)
            Me.columnPOOL9D = New Global.System.Data.DataColumn("POOL9D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL9D)
            Me.columnPOOL9E = New Global.System.Data.DataColumn("POOL9E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL9E)
            Me.columnPOOL10A = New Global.System.Data.DataColumn("POOL10A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL10A)
            Me.columnPOOL10B = New Global.System.Data.DataColumn("POOL10B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL10B)
            Me.columnPOOL10C = New Global.System.Data.DataColumn("POOL10C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL10C)
            Me.columnPOOL10D = New Global.System.Data.DataColumn("POOL10D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL10D)
            Me.columnPOOL10E = New Global.System.Data.DataColumn("POOL10E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL10E)
            Me.columnPOOL11A = New Global.System.Data.DataColumn("POOL11A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL11A)
            Me.columnPOOL11B = New Global.System.Data.DataColumn("POOL11B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL11B)
            Me.columnPOOL11C = New Global.System.Data.DataColumn("POOL11C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL11C)
            Me.columnPOOL11D = New Global.System.Data.DataColumn("POOL11D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL11D)
            Me.columnPOOL11E = New Global.System.Data.DataColumn("POOL11E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL11E)
            Me.columnPOOL12A = New Global.System.Data.DataColumn("POOL12A", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL12A)
            Me.columnPOOL12B = New Global.System.Data.DataColumn("POOL12B", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL12B)
            Me.columnPOOL12C = New Global.System.Data.DataColumn("POOL12C", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL12C)
            Me.columnPOOL12D = New Global.System.Data.DataColumn("POOL12D", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL12D)
            Me.columnPOOL12E = New Global.System.Data.DataColumn("POOL12E", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOOL12E)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewEXOTICSRow() As EXOTICSRow
            Return CType(Me.NewRow,EXOTICSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New EXOTICSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(EXOTICSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.EXOTICSRowChangedEvent) Is Nothing) Then
                RaiseEvent EXOTICSRowChanged(Me, New EXOTICSRowChangeEvent(CType(e.Row,EXOTICSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.EXOTICSRowChangingEvent) Is Nothing) Then
                RaiseEvent EXOTICSRowChanging(Me, New EXOTICSRowChangeEvent(CType(e.Row,EXOTICSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.EXOTICSRowDeletedEvent) Is Nothing) Then
                RaiseEvent EXOTICSRowDeleted(Me, New EXOTICSRowChangeEvent(CType(e.Row,EXOTICSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.EXOTICSRowDeletingEvent) Is Nothing) Then
                RaiseEvent EXOTICSRowDeleting(Me, New EXOTICSRowChangeEvent(CType(e.Row,EXOTICSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveEXOTICSRow(ByVal row As EXOTICSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As RaceDisplayDataset = New RaceDisplayDataset()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "EXOTICSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RACERow
        Inherits Global.System.Data.DataRow
        
        Private tableRACE As RACEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRACE = CType(Me.Table,RACEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Return CType(Me(Me.tableRACE.RACEKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableRACE.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACENBRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRACE.RACENBRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACENBRA' in table 'RACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRACE.RACENBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACENBRB() As String
            Get
                Try 
                    Return CType(Me(Me.tableRACE.RACENBRBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACENBRB' in table 'RACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRACE.RACENBRBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACENBRANull() As Boolean
            Return Me.IsNull(Me.tableRACE.RACENBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACENBRANull()
            Me(Me.tableRACE.RACENBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACENBRBNull() As Boolean
            Return Me.IsNull(Me.tableRACE.RACENBRBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACENBRBNull()
            Me(Me.tableRACE.RACENBRBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetODDSRows() As ODDSRow()
            If (Me.Table.ChildRelations("RACE_ODDS") Is Nothing) Then
                Return New ODDSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACE_ODDS")),ODDSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetMTPRows() As MTPRow()
            If (Me.Table.ChildRelations("RACE_MTP") Is Nothing) Then
                Return New MTPRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACE_MTP")),MTPRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTODRows() As TODRow()
            If (Me.Table.ChildRelations("RACE_TOD") Is Nothing) Then
                Return New TODRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACE_TOD")),TODRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPOSTTIMERows() As POSTTIMERow()
            If (Me.Table.ChildRelations("RACE_POSTTIME") Is Nothing) Then
                Return New POSTTIMERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACE_POSTTIME")),POSTTIMERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetEXOTICSRows() As EXOTICSRow()
            If (Me.Table.ChildRelations("RACE_EXOTICS") Is Nothing) Then
                Return New EXOTICSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACE_EXOTICS")),EXOTICSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MTPRow
        Inherits Global.System.Data.DataRow
        
        Private tableMTP As MTPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMTP = CType(Me.Table,MTPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMTP.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'MTP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MINUTESA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP.MINUTESAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINUTESA' in table 'MTP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP.MINUTESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MINUTESB() As String
            Get
                Try 
                    Return CType(Me(Me.tableMTP.MINUTESBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MINUTESB' in table 'MTP' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMTP.MINUTESBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACERow() As RACERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACE_MTP")),RACERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACE_MTP"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableMTP.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableMTP.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMINUTESANull() As Boolean
            Return Me.IsNull(Me.tableMTP.MINUTESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMINUTESANull()
            Me(Me.tableMTP.MINUTESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMINUTESBNull() As Boolean
            Return Me.IsNull(Me.tableMTP.MINUTESBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMINUTESBNull()
            Me(Me.tableMTP.MINUTESBColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ODDSRow
        Inherits Global.System.Data.DataRow
        
        Private tableODDS As ODDSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableODDS = CType(Me.Table,ODDSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableODDS.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS1' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS1A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS2' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS2A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS3() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS3' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS3A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS4() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS4' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS4A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS4AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS4A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS4AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS5() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS5' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS5A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS5AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS5A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS5AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS6() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS6' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS6A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS6AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS6A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS6AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS7() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS7Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS7' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS7A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS7AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS7A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS7AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS8() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS8Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS8' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS8A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS8AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS8A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS8AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS9() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS9Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS9' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS9A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS9AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS9A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS9AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS10() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS10Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS10' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS10A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS10AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS10A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS10AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS11() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS11Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS11' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS11A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS11AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS11A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS11AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS12() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS12Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS12' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS12A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS12AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS12A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS12AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS13() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS13Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS13' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS13A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS13AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS13A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS13AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS14() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS14Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS14' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS14A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS14AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS14A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS14AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS15() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS15Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS15' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS15A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS15AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS15A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS15AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS16() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS16Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS16' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS16Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ODDS16A() As String
            Get
                Try 
                    Return CType(Me(Me.tableODDS.ODDS16AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ODDS16A' in table 'ODDS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableODDS.ODDS16AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACERow() As RACERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACE_ODDS")),RACERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACE_ODDS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableODDS.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableODDS.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS1Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS1Null()
            Me(Me.tableODDS.ODDS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS1ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS1ANull()
            Me(Me.tableODDS.ODDS1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS2Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS2Null()
            Me(Me.tableODDS.ODDS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS2ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS2ANull()
            Me(Me.tableODDS.ODDS2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS3Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS3Null()
            Me(Me.tableODDS.ODDS3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS3ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS3ANull()
            Me(Me.tableODDS.ODDS3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS4Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS4Null()
            Me(Me.tableODDS.ODDS4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS4ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS4AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS4ANull()
            Me(Me.tableODDS.ODDS4AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS5Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS5Null()
            Me(Me.tableODDS.ODDS5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS5ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS5AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS5ANull()
            Me(Me.tableODDS.ODDS5AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS6Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS6Null()
            Me(Me.tableODDS.ODDS6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS6ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS6AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS6ANull()
            Me(Me.tableODDS.ODDS6AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS7Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS7Null()
            Me(Me.tableODDS.ODDS7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS7ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS7AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS7ANull()
            Me(Me.tableODDS.ODDS7AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS8Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS8Null()
            Me(Me.tableODDS.ODDS8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS8ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS8AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS8ANull()
            Me(Me.tableODDS.ODDS8AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS9Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS9Null()
            Me(Me.tableODDS.ODDS9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS9ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS9AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS9ANull()
            Me(Me.tableODDS.ODDS9AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS10Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS10Null()
            Me(Me.tableODDS.ODDS10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS10ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS10AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS10ANull()
            Me(Me.tableODDS.ODDS10AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS11Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS11Null()
            Me(Me.tableODDS.ODDS11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS11ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS11AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS11ANull()
            Me(Me.tableODDS.ODDS11AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS12Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS12Null()
            Me(Me.tableODDS.ODDS12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS12ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS12AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS12ANull()
            Me(Me.tableODDS.ODDS12AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS13Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS13Null()
            Me(Me.tableODDS.ODDS13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS13ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS13AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS13ANull()
            Me(Me.tableODDS.ODDS13AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS14Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS14Null()
            Me(Me.tableODDS.ODDS14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS14ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS14AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS14ANull()
            Me(Me.tableODDS.ODDS14AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS15Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS15Null()
            Me(Me.tableODDS.ODDS15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS15ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS15AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS15ANull()
            Me(Me.tableODDS.ODDS15AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS16Null() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS16Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS16Null()
            Me(Me.tableODDS.ODDS16Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsODDS16ANull() As Boolean
            Return Me.IsNull(Me.tableODDS.ODDS16AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetODDS16ANull()
            Me(Me.tableODDS.ODDS16AColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RUNNINGORDERRow
        Inherits Global.System.Data.DataRow
        
        Private tableRUNNINGORDER As RUNNINGORDERDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRUNNINGORDER = CType(Me.Table,RUNNINGORDERDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER1() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER1' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER1A' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER2() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER2' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER2A' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER3() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER3' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER3A' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER4() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER4' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNER4A() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNER4AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNER4A' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNER4AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNERDH1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNERDH1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNERDH1' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNERDH1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNERDH2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNERDH2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNERDH2' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNERDH2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNERDH3() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNERDH3Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNERDH3' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNERDH3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINNERDH4() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRUNNINGORDER.WINNERDH4Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINNERDH4' in table 'RUNNINGORDER' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUNNINGORDER.WINNERDH4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_RUNNINGORDER")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_RUNNINGORDER"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableRUNNINGORDER.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER1Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER1Null()
            Me(Me.tableRUNNINGORDER.WINNER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER1ANull() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER1ANull()
            Me(Me.tableRUNNINGORDER.WINNER1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER2Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER2Null()
            Me(Me.tableRUNNINGORDER.WINNER2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER2ANull() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER2ANull()
            Me(Me.tableRUNNINGORDER.WINNER2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER3Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER3Null()
            Me(Me.tableRUNNINGORDER.WINNER3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER3ANull() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER3ANull()
            Me(Me.tableRUNNINGORDER.WINNER3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER4Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER4Null()
            Me(Me.tableRUNNINGORDER.WINNER4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNER4ANull() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNER4AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNER4ANull()
            Me(Me.tableRUNNINGORDER.WINNER4AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNERDH1Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNERDH1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNERDH1Null()
            Me(Me.tableRUNNINGORDER.WINNERDH1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNERDH2Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNERDH2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNERDH2Null()
            Me(Me.tableRUNNINGORDER.WINNERDH2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNERDH3Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNERDH3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNERDH3Null()
            Me(Me.tableRUNNINGORDER.WINNERDH3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINNERDH4Null() As Boolean
            Return Me.IsNull(Me.tableRUNNINGORDER.WINNERDH4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINNERDH4Null()
            Me(Me.tableRUNNINGORDER.WINNERDH4Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class WINRow
        Inherits Global.System.Data.DataRow
        
        Private tableWIN As WINDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableWIN = CType(Me.Table,WINDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableWIN.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1A' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1B' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1C() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1C' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1D() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1D' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1E() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1E' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT1F() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT1FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT1F' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT1FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2A' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2B' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2C() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2C' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2D() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2D' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2E() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2E' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property WINAMOUNT2F() As String
            Get
                Try 
                    Return CType(Me(Me.tableWIN.WINAMOUNT2FColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WINAMOUNT2F' in table 'WIN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableWIN.WINAMOUNT2FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_WIN")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_WIN"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableWIN.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableWIN.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1ANull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1ANull()
            Me(Me.tableWIN.WINAMOUNT1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1BNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1BNull()
            Me(Me.tableWIN.WINAMOUNT1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1CNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1CNull()
            Me(Me.tableWIN.WINAMOUNT1CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1DNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1DNull()
            Me(Me.tableWIN.WINAMOUNT1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1ENull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1ENull()
            Me(Me.tableWIN.WINAMOUNT1EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT1FNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT1FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT1FNull()
            Me(Me.tableWIN.WINAMOUNT1FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2ANull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2ANull()
            Me(Me.tableWIN.WINAMOUNT2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2BNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2BNull()
            Me(Me.tableWIN.WINAMOUNT2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2CNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2CNull()
            Me(Me.tableWIN.WINAMOUNT2CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2DNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2DNull()
            Me(Me.tableWIN.WINAMOUNT2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2ENull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2ENull()
            Me(Me.tableWIN.WINAMOUNT2EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsWINAMOUNT2FNull() As Boolean
            Return Me.IsNull(Me.tableWIN.WINAMOUNT2FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetWINAMOUNT2FNull()
            Me(Me.tableWIN.WINAMOUNT2FColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PLACERow
        Inherits Global.System.Data.DataRow
        
        Private tablePLACE As PLACEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePLACE = CType(Me.Table,PLACEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT1A() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT1A' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT1B() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT1B' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT1C() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT1CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT1C' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT1CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT1D() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT1D' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT1E() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT1EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT1E' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT1EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT2A() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT2A' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT2B() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT2B' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT2C() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT2CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT2C' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT2CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT2D() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT2D' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT2E() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT2EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT2E' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT2EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT3A() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT3A' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT3B() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT3BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT3B' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT3BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT3C() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT3CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT3C' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT3CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT3D() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT3DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT3D' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT3DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PLACEAMOUNT3E() As String
            Get
                Try 
                    Return CType(Me(Me.tablePLACE.PLACEAMOUNT3EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLACEAMOUNT3E' in table 'PLACE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePLACE.PLACEAMOUNT3EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_PLACE")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_PLACE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tablePLACE.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT1ANull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT1ANull()
            Me(Me.tablePLACE.PLACEAMOUNT1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT1BNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT1BNull()
            Me(Me.tablePLACE.PLACEAMOUNT1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT1CNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT1CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT1CNull()
            Me(Me.tablePLACE.PLACEAMOUNT1CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT1DNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT1DNull()
            Me(Me.tablePLACE.PLACEAMOUNT1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT1ENull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT1EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT1ENull()
            Me(Me.tablePLACE.PLACEAMOUNT1EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT2ANull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT2ANull()
            Me(Me.tablePLACE.PLACEAMOUNT2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT2BNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT2BNull()
            Me(Me.tablePLACE.PLACEAMOUNT2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT2CNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT2CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT2CNull()
            Me(Me.tablePLACE.PLACEAMOUNT2CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT2DNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT2DNull()
            Me(Me.tablePLACE.PLACEAMOUNT2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT2ENull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT2EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT2ENull()
            Me(Me.tablePLACE.PLACEAMOUNT2EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT3ANull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT3ANull()
            Me(Me.tablePLACE.PLACEAMOUNT3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT3BNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT3BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT3BNull()
            Me(Me.tablePLACE.PLACEAMOUNT3BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT3CNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT3CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT3CNull()
            Me(Me.tablePLACE.PLACEAMOUNT3CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT3DNull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT3DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT3DNull()
            Me(Me.tablePLACE.PLACEAMOUNT3DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPLACEAMOUNT3ENull() As Boolean
            Return Me.IsNull(Me.tablePLACE.PLACEAMOUNT3EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPLACEAMOUNT3ENull()
            Me(Me.tablePLACE.PLACEAMOUNT3EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SHOWRow
        Inherits Global.System.Data.DataRow
        
        Private tableSHOW As SHOWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSHOW = CType(Me.Table,SHOWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT1A' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT1B' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT1C() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT1CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT1C' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT1CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT1D() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT1D' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT1E() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT1EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT1E' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT1EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT2A' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT2B' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT2C() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT2CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT2C' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT2CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT2D() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT2D' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT2E() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT2EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT2E' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT2EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT3A' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT3B() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT3BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT3B' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT3BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT3C() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT3CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT3C' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT3CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT3D() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT3DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT3D' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT3DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT3E() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT3EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT3E' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT3EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT4A() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT4AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT4A' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT4AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT4B() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT4BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT4B' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT4BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT4C() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT4CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT4C' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT4CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT4D() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT4DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT4D' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT4DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SHOWAMOUNT4E() As String
            Get
                Try 
                    Return CType(Me(Me.tableSHOW.SHOWAMOUNT4EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHOWAMOUNT4E' in table 'SHOW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSHOW.SHOWAMOUNT4EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_SHOW")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_SHOW"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableSHOW.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT1ANull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT1ANull()
            Me(Me.tableSHOW.SHOWAMOUNT1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT1BNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT1BNull()
            Me(Me.tableSHOW.SHOWAMOUNT1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT1CNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT1CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT1CNull()
            Me(Me.tableSHOW.SHOWAMOUNT1CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT1DNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT1DNull()
            Me(Me.tableSHOW.SHOWAMOUNT1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT1ENull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT1EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT1ENull()
            Me(Me.tableSHOW.SHOWAMOUNT1EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT2ANull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT2ANull()
            Me(Me.tableSHOW.SHOWAMOUNT2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT2BNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT2BNull()
            Me(Me.tableSHOW.SHOWAMOUNT2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT2CNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT2CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT2CNull()
            Me(Me.tableSHOW.SHOWAMOUNT2CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT2DNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT2DNull()
            Me(Me.tableSHOW.SHOWAMOUNT2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT2ENull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT2EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT2ENull()
            Me(Me.tableSHOW.SHOWAMOUNT2EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT3ANull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT3ANull()
            Me(Me.tableSHOW.SHOWAMOUNT3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT3BNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT3BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT3BNull()
            Me(Me.tableSHOW.SHOWAMOUNT3BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT3CNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT3CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT3CNull()
            Me(Me.tableSHOW.SHOWAMOUNT3CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT3DNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT3DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT3DNull()
            Me(Me.tableSHOW.SHOWAMOUNT3DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT3ENull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT3EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT3ENull()
            Me(Me.tableSHOW.SHOWAMOUNT3EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT4ANull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT4AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT4ANull()
            Me(Me.tableSHOW.SHOWAMOUNT4AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT4BNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT4BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT4BNull()
            Me(Me.tableSHOW.SHOWAMOUNT4BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT4CNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT4CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT4CNull()
            Me(Me.tableSHOW.SHOWAMOUNT4CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT4DNull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT4DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT4DNull()
            Me(Me.tableSHOW.SHOWAMOUNT4DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSHOWAMOUNT4ENull() As Boolean
            Return Me.IsNull(Me.tableSHOW.SHOWAMOUNT4EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSHOWAMOUNT4ENull()
            Me(Me.tableSHOW.SHOWAMOUNT4EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DAILYDOUBLERow
        Inherits Global.System.Data.DataRow
        
        Private tableDAILYDOUBLE As DAILYDOUBLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDAILYDOUBLE = CType(Me.Table,DAILYDOUBLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DD1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DD1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD1A' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DD1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DD1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DD1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD1B' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DD1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DD2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DD2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD2A' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DD2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DD2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DD2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DD2B' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DD2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTA' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTB() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTB' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTC' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTD() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTD' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTE' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DDAMOUNTF() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILYDOUBLE.DDAMOUNTFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DDAMOUNTF' in table 'DAILYDOUBLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILYDOUBLE.DDAMOUNTFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_DAILYDOUBLE")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_DAILYDOUBLE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableDAILYDOUBLE.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDD1ANull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DD1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDD1ANull()
            Me(Me.tableDAILYDOUBLE.DD1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDD1BNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DD1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDD1BNull()
            Me(Me.tableDAILYDOUBLE.DD1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDD2ANull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DD2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDD2ANull()
            Me(Me.tableDAILYDOUBLE.DD2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDD2BNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DD2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDD2BNull()
            Me(Me.tableDAILYDOUBLE.DD2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTANull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTANull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTBNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTBNull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTCNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTCNull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTDNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTDNull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTENull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTENull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDDAMOUNTFNull() As Boolean
            Return Me.IsNull(Me.tableDAILYDOUBLE.DDAMOUNTFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDDAMOUNTFNull()
            Me(Me.tableDAILYDOUBLE.DDAMOUNTFColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PERFECTARow
        Inherits Global.System.Data.DataRow
        
        Private tablePERFECTA As PERFECTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePERFECTA = CType(Me.Table,PERFECTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTA1A() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTA1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTA1A' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTA1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTA1B() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTA1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTA1B' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTA1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTA2A() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTA2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTA2A' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTA2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTA2B() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTA2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTA2B' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTA2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTA' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTB() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTB' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTC' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTD' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTE' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTF() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTF' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PERFECTAAMOUNTG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePERFECTA.PERFECTAAMOUNTGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFECTAAMOUNTG' in table 'PERFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePERFECTA.PERFECTAAMOUNTGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_PERFECTA")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_PERFECTA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tablePERFECTA.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTA1ANull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTA1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTA1ANull()
            Me(Me.tablePERFECTA.PERFECTA1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTA1BNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTA1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTA1BNull()
            Me(Me.tablePERFECTA.PERFECTA1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTA2ANull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTA2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTA2ANull()
            Me(Me.tablePERFECTA.PERFECTA2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTA2BNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTA2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTA2BNull()
            Me(Me.tablePERFECTA.PERFECTA2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTANull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTANull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTBNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTBNull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTCNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTCNull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTDNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTDNull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTENull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTENull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTFNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTFNull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPERFECTAAMOUNTGNull() As Boolean
            Return Me.IsNull(Me.tablePERFECTA.PERFECTAAMOUNTGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPERFECTAAMOUNTGNull()
            Me(Me.tablePERFECTA.PERFECTAAMOUNTGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BET3Row
        Inherits Global.System.Data.DataRow
        
        Private tableBET3 As BET3DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBET3 = CType(Me.Table,BET3DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableBET3.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET1A' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET1B' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET2A' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET2B' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET3A' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BET3B() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BET3BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BET3B' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BET3BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTA' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTB() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTB' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTC' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTD() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTD' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTE' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTF() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTF' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BETAMOUNTG() As String
            Get
                Try 
                    Return CType(Me(Me.tableBET3.BETAMOUNTGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BETAMOUNTG' in table 'BET3' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBET3.BETAMOUNTGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_BET3")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_BET3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableBET3.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableBET3.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET1ANull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET1ANull()
            Me(Me.tableBET3.BET1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET1BNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET1BNull()
            Me(Me.tableBET3.BET1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET2ANull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET2ANull()
            Me(Me.tableBET3.BET2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET2BNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET2BNull()
            Me(Me.tableBET3.BET2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET3ANull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET3ANull()
            Me(Me.tableBET3.BET3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBET3BNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BET3BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBET3BNull()
            Me(Me.tableBET3.BET3BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTANull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTANull()
            Me(Me.tableBET3.BETAMOUNTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTBNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTBNull()
            Me(Me.tableBET3.BETAMOUNTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTCNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTCNull()
            Me(Me.tableBET3.BETAMOUNTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTDNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTDNull()
            Me(Me.tableBET3.BETAMOUNTDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTENull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTENull()
            Me(Me.tableBET3.BETAMOUNTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTFNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTFNull()
            Me(Me.tableBET3.BETAMOUNTFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsBETAMOUNTGNull() As Boolean
            Return Me.IsNull(Me.tableBET3.BETAMOUNTGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetBETAMOUNTGNull()
            Me(Me.tableBET3.BETAMOUNTGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TRIFECTARow
        Inherits Global.System.Data.DataRow
        
        Private tableTRIFECTA As TRIFECTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTRIFECTA = CType(Me.Table,TRIFECTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA1A' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA1B' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA2A' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA2B' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA3A' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTA3B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTA3BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTA3B' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTA3BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTA' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTB() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTB' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTC' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTD' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTE' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTF() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTF' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TRIFECTAAMOUNTG() As String
            Get
                Try 
                    Return CType(Me(Me.tableTRIFECTA.TRIFECTAAMOUNTGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRIFECTAAMOUNTG' in table 'TRIFECTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTRIFECTA.TRIFECTAAMOUNTGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_TRIFECTA")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_TRIFECTA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTRIFECTA.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA1ANull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA1ANull()
            Me(Me.tableTRIFECTA.TRIFECTA1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA1BNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA1BNull()
            Me(Me.tableTRIFECTA.TRIFECTA1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA2ANull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA2ANull()
            Me(Me.tableTRIFECTA.TRIFECTA2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA2BNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA2BNull()
            Me(Me.tableTRIFECTA.TRIFECTA2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA3ANull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA3ANull()
            Me(Me.tableTRIFECTA.TRIFECTA3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTA3BNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTA3BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTA3BNull()
            Me(Me.tableTRIFECTA.TRIFECTA3BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTANull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTANull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTBNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTBNull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTCNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTCNull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTDNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTDNull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTENull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTENull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTFNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTFNull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTRIFECTAAMOUNTGNull() As Boolean
            Return Me.IsNull(Me.tableTRIFECTA.TRIFECTAAMOUNTGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTRIFECTAAMOUNTGNull()
            Me(Me.tableTRIFECTA.TRIFECTAAMOUNTGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RACEONDISPLAYRow
        Inherits Global.System.Data.DataRow
        
        Private tableRACEONDISPLAY As RACEONDISPLAYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRACEONDISPLAY = CType(Me.Table,RACEONDISPLAYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Return CType(Me(Me.tableRACEONDISPLAY.RACEKEYColumn),Integer)
            End Get
            Set
                Me(Me.tableRACEONDISPLAY.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACENBRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRACEONDISPLAY.RACENBRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACENBRA' in table 'RACEONDISPLAY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRACEONDISPLAY.RACENBRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACENBRB() As String
            Get
                Try 
                    Return CType(Me(Me.tableRACEONDISPLAY.RACENBRBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACENBRB' in table 'RACEONDISPLAY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRACEONDISPLAY.RACENBRBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACENBRANull() As Boolean
            Return Me.IsNull(Me.tableRACEONDISPLAY.RACENBRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACENBRANull()
            Me(Me.tableRACEONDISPLAY.RACENBRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACENBRBNull() As Boolean
            Return Me.IsNull(Me.tableRACEONDISPLAY.RACENBRBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACENBRBNull()
            Me(Me.tableRACEONDISPLAY.RACENBRBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetRUNNINGORDERRows() As RUNNINGORDERRow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_RUNNINGORDER") Is Nothing) Then
                Return New RUNNINGORDERRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_RUNNINGORDER")),RUNNINGORDERRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetWINRows() As WINRow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_WIN") Is Nothing) Then
                Return New WINRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_WIN")),WINRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPLACERows() As PLACERow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_PLACE") Is Nothing) Then
                Return New PLACERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_PLACE")),PLACERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetDAILYDOUBLERows() As DAILYDOUBLERow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_DAILYDOUBLE") Is Nothing) Then
                Return New DAILYDOUBLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_DAILYDOUBLE")),DAILYDOUBLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetPERFECTARows() As PERFECTARow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_PERFECTA") Is Nothing) Then
                Return New PERFECTARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_PERFECTA")),PERFECTARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSHOWRows() As SHOWRow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_SHOW") Is Nothing) Then
                Return New SHOWRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_SHOW")),SHOWRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetBET3Rows() As BET3Row()
            If (Me.Table.ChildRelations("RACEONDISPLAY_BET3") Is Nothing) Then
                Return New BET3Row(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_BET3")),BET3Row())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetTRIFECTARows() As TRIFECTARow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_TRIFECTA") Is Nothing) Then
                Return New TRIFECTARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_TRIFECTA")),TRIFECTARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function GetSTATUSRows() As STATUSRow()
            If (Me.Table.ChildRelations("RACEONDISPLAY_STATUS") Is Nothing) Then
                Return New STATUSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("RACEONDISPLAY_STATUS")),STATUSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MESSAGESRow
        Inherits Global.System.Data.DataRow
        
        Private tableMESSAGES As MESSAGESDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMESSAGES = CType(Me.Table,MESSAGESDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MESSAGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableMESSAGES.MESSAGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MESSAGE' in table 'MESSAGES' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMESSAGES.MESSAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMESSAGENull() As Boolean
            Return Me.IsNull(Me.tableMESSAGES.MESSAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMESSAGENull()
            Me(Me.tableMESSAGES.MESSAGEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STATUSRow
        Inherits Global.System.Data.DataRow
        
        Private tableSTATUS As STATUSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTATUS = CType(Me.Table,STATUSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OFFICIAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.OFFICIALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OFFICIAL' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.OFFICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DEADHEAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.DEADHEATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEADHEAT' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.DEADHEATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INQOBJ() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.INQOBJColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INQOBJ' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.INQOBJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property INQUIRY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.INQUIRYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INQUIRY' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.INQUIRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OBJECTION() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.OBJECTIONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBJECTION' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.OBJECTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PHOTO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSTATUS.PHOTOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHOTO' in table 'STATUS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTATUS.PHOTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEONDISPLAYRow() As RACEONDISPLAYRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACEONDISPLAY_STATUS")),RACEONDISPLAYRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACEONDISPLAY_STATUS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableSTATUS.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOFFICIALNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.OFFICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOFFICIALNull()
            Me(Me.tableSTATUS.OFFICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDEADHEATNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.DEADHEATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDEADHEATNull()
            Me(Me.tableSTATUS.DEADHEATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsINQOBJNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.INQOBJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetINQOBJNull()
            Me(Me.tableSTATUS.INQOBJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsINQUIRYNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.INQUIRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetINQUIRYNull()
            Me(Me.tableSTATUS.INQUIRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOBJECTIONNull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.OBJECTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOBJECTIONNull()
            Me(Me.tableSTATUS.OBJECTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPHOTONull() As Boolean
            Return Me.IsNull(Me.tableSTATUS.PHOTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPHOTONull()
            Me(Me.tableSTATUS.PHOTOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TODRow
        Inherits Global.System.Data.DataRow
        
        Private tableTOD As TODDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTOD = CType(Me.Table,TODDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTOD.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TOD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTOD.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TODA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTOD.TODAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TODA' in table 'TOD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTOD.TODAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TODB() As String
            Get
                Try 
                    Return CType(Me(Me.tableTOD.TODBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TODB' in table 'TOD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTOD.TODBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TODC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTOD.TODCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TODC' in table 'TOD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTOD.TODCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TODD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTOD.TODDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TODD' in table 'TOD' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTOD.TODDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACERow() As RACERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACE_TOD")),RACERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACE_TOD"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTOD.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTOD.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTODANull() As Boolean
            Return Me.IsNull(Me.tableTOD.TODAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTODANull()
            Me(Me.tableTOD.TODAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTODBNull() As Boolean
            Return Me.IsNull(Me.tableTOD.TODBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTODBNull()
            Me(Me.tableTOD.TODBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTODCNull() As Boolean
            Return Me.IsNull(Me.tableTOD.TODCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTODCNull()
            Me(Me.tableTOD.TODCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTODDNull() As Boolean
            Return Me.IsNull(Me.tableTOD.TODDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTODDNull()
            Me(Me.tableTOD.TODDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class POSTTIMERow
        Inherits Global.System.Data.DataRow
        
        Private tablePOSTTIME As POSTTIMEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePOSTTIME = CType(Me.Table,POSTTIMEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePOSTTIME.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'POSTTIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOSTTIME.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PTA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOSTTIME.PTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTA' in table 'POSTTIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOSTTIME.PTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PTB() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOSTTIME.PTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTB' in table 'POSTTIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOSTTIME.PTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PTC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOSTTIME.PTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTC' in table 'POSTTIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOSTTIME.PTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PTD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePOSTTIME.PTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTD' in table 'POSTTIME' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePOSTTIME.PTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACERow() As RACERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACE_POSTTIME")),RACERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACE_POSTTIME"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tablePOSTTIME.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tablePOSTTIME.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPTANull() As Boolean
            Return Me.IsNull(Me.tablePOSTTIME.PTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPTANull()
            Me(Me.tablePOSTTIME.PTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPTBNull() As Boolean
            Return Me.IsNull(Me.tablePOSTTIME.PTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPTBNull()
            Me(Me.tablePOSTTIME.PTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPTCNull() As Boolean
            Return Me.IsNull(Me.tablePOSTTIME.PTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPTCNull()
            Me(Me.tablePOSTTIME.PTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPTDNull() As Boolean
            Return Me.IsNull(Me.tablePOSTTIME.PTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPTDNull()
            Me(Me.tablePOSTTIME.PTDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIMINGFINISHRow
        Inherits Global.System.Data.DataRow
        
        Private tableTIMINGFINISH As TIMINGFINISHDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIMINGFINISH = CType(Me.Table,TIMINGFINISHDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGFINISHA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.TIMINGFINISHAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGFINISHA' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.TIMINGFINISHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGFINISHB() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.TIMINGFINISHBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGFINISHB' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.TIMINGFINISHBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGFINISHC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.TIMINGFINISHCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGFINISHC' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.TIMINGFINISHCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGFINISHD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.TIMINGFINISHDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGFINISHD' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.TIMINGFINISHDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGFINISHE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGFINISH.TIMINGFINISHEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGFINISHE' in table 'TIMINGFINISH' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGFINISH.TIMINGFINISHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTIMINGFINISH.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGFINISHANull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.TIMINGFINISHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGFINISHANull()
            Me(Me.tableTIMINGFINISH.TIMINGFINISHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGFINISHBNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.TIMINGFINISHBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGFINISHBNull()
            Me(Me.tableTIMINGFINISH.TIMINGFINISHBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGFINISHCNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.TIMINGFINISHCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGFINISHCNull()
            Me(Me.tableTIMINGFINISH.TIMINGFINISHCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGFINISHDNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.TIMINGFINISHDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGFINISHDNull()
            Me(Me.tableTIMINGFINISH.TIMINGFINISHDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGFINISHENull() As Boolean
            Return Me.IsNull(Me.tableTIMINGFINISH.TIMINGFINISHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGFINISHENull()
            Me(Me.tableTIMINGFINISH.TIMINGFINISHEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIMINGMILERow
        Inherits Global.System.Data.DataRow
        
        Private tableTIMINGMILE As TIMINGMILEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIMINGMILE = CType(Me.Table,TIMINGMILEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGMILEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.TIMINGMILEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGMILEA' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.TIMINGMILEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGMILEB() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.TIMINGMILEBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGMILEB' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.TIMINGMILEBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGMILEC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.TIMINGMILECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGMILEC' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.TIMINGMILECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGMILED() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.TIMINGMILEDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGMILED' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.TIMINGMILEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMINGMILEE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMINGMILE.TIMINGMILEEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMINGMILEE' in table 'TIMINGMILE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMINGMILE.TIMINGMILEEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTIMINGMILE.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGMILEANull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.TIMINGMILEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGMILEANull()
            Me(Me.tableTIMINGMILE.TIMINGMILEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGMILEBNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.TIMINGMILEBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGMILEBNull()
            Me(Me.tableTIMINGMILE.TIMINGMILEBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGMILECNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.TIMINGMILECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGMILECNull()
            Me(Me.tableTIMINGMILE.TIMINGMILECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGMILEDNull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.TIMINGMILEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGMILEDNull()
            Me(Me.tableTIMINGMILE.TIMINGMILEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMINGMILEENull() As Boolean
            Return Me.IsNull(Me.tableTIMINGMILE.TIMINGMILEEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMINGMILEENull()
            Me(Me.tableTIMINGMILE.TIMINGMILEEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIMING34Row
        Inherits Global.System.Data.DataRow
        
        Private tableTIMING34 As TIMING34DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIMING34 = CType(Me.Table,TIMING34DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING34A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.TIMING34AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING34A' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.TIMING34AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING34B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.TIMING34BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING34B' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.TIMING34BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING34C() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.TIMING34CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING34C' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.TIMING34CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING34D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.TIMING34DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING34D' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.TIMING34DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING34E() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING34.TIMING34EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING34E' in table 'TIMING34' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING34.TIMING34EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTIMING34.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING34ANull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.TIMING34AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING34ANull()
            Me(Me.tableTIMING34.TIMING34AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING34BNull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.TIMING34BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING34BNull()
            Me(Me.tableTIMING34.TIMING34BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING34CNull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.TIMING34CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING34CNull()
            Me(Me.tableTIMING34.TIMING34CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING34DNull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.TIMING34DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING34DNull()
            Me(Me.tableTIMING34.TIMING34DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING34ENull() As Boolean
            Return Me.IsNull(Me.tableTIMING34.TIMING34EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING34ENull()
            Me(Me.tableTIMING34.TIMING34EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIMING12Row
        Inherits Global.System.Data.DataRow
        
        Private tableTIMING12 As TIMING12DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIMING12 = CType(Me.Table,TIMING12DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING12A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.TIMING12AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING12A' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.TIMING12AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING12B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.TIMING12BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING12B' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.TIMING12BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING12C() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.TIMING12CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING12C' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.TIMING12CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING12D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.TIMING12DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING12D' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.TIMING12DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING12E() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING12.TIMING12EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING12E' in table 'TIMING12' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING12.TIMING12EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTIMING12.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING12ANull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.TIMING12AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING12ANull()
            Me(Me.tableTIMING12.TIMING12AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING12BNull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.TIMING12BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING12BNull()
            Me(Me.tableTIMING12.TIMING12BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING12CNull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.TIMING12CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING12CNull()
            Me(Me.tableTIMING12.TIMING12CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING12DNull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.TIMING12DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING12DNull()
            Me(Me.tableTIMING12.TIMING12DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING12ENull() As Boolean
            Return Me.IsNull(Me.tableTIMING12.TIMING12EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING12ENull()
            Me(Me.tableTIMING12.TIMING12EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIMING14Row
        Inherits Global.System.Data.DataRow
        
        Private tableTIMING14 As TIMING14DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIMING14 = CType(Me.Table,TIMING14DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING14A() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.TIMING14AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING14A' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.TIMING14AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING14B() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.TIMING14BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING14B' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.TIMING14BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING14C() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.TIMING14CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING14C' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.TIMING14CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING14D() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.TIMING14DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING14D' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.TIMING14DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TIMING14E() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIMING14.TIMING14EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIMING14E' in table 'TIMING14' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIMING14.TIMING14EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableTIMING14.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING14ANull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.TIMING14AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING14ANull()
            Me(Me.tableTIMING14.TIMING14AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING14BNull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.TIMING14BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING14BNull()
            Me(Me.tableTIMING14.TIMING14BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING14CNull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.TIMING14CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING14CNull()
            Me(Me.tableTIMING14.TIMING14CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING14DNull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.TIMING14DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING14DNull()
            Me(Me.tableTIMING14.TIMING14DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTIMING14ENull() As Boolean
            Return Me.IsNull(Me.tableTIMING14.TIMING14EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTIMING14ENull()
            Me(Me.tableTIMING14.TIMING14EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class EXOTICSRow
        Inherits Global.System.Data.DataRow
        
        Private tableEXOTICS As EXOTICSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableEXOTICS = CType(Me.Table,EXOTICSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACEKEY() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.RACEKEYColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RACEKEY' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.RACEKEYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTYPEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTYPEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTYPEA' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTYPEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTA' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTB() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTB' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTC() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTC' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTD() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTD' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTE' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOLTOTF() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOLTOTFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOLTOTF' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOLTOTFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL1A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL1AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL1A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL1AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL1B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL1BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL1B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL1BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL1C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL1CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL1C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL1CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL1D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL1DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL1D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL1DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL1E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL1EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL1E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL1EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL2A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL2AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL2A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL2AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL2B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL2BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL2B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL2BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL2C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL2CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL2C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL2CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL2D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL2DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL2D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL2DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL2E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL2EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL2E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL2EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL3A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL3AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL3A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL3AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL3B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL3BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL3B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL3BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL3C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL3CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL3C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL3CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL3D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL3DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL3D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL3DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL3E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL3EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL3E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL3EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL4A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL4AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL4A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL4AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL4B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL4BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL4B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL4BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL4C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL4CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL4C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL4CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL4D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL4DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL4D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL4DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL4E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL4EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL4E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL4EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL5A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL5AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL5A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL5AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL5B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL5BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL5B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL5BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL5C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL5CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL5C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL5CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL5D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL5DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL5D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL5DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL5E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL5EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL5E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL5EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL6A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL6AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL6A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL6AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL6B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL6BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL6B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL6BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL6C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL6CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL6C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL6CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL6D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL6DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL6D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL6DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL6E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL6EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL6E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL6EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL7A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL7AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL7A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL7AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL7B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL7BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL7B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL7BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL7C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL7CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL7C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL7CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL7D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL7DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL7D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL7DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL7E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL7EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL7E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL7EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL8A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL8AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL8A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL8AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL8B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL8BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL8B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL8BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL8C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL8CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL8C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL8CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL8D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL8DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL8D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL8DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL8E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL8EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL8E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL8EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL9A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL9AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL9A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL9AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL9B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL9BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL9B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL9BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL9C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL9CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL9C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL9CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL9D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL9DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL9D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL9DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL9E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL9EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL9E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL9EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL10A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL10AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL10A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL10AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL10B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL10BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL10B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL10BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL10C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL10CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL10C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL10CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL10D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL10DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL10D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL10DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL10E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL10EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL10E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL10EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL11A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL11AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL11A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL11AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL11B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL11BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL11B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL11BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL11C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL11CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL11C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL11CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL11D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL11DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL11D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL11DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL11E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL11EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL11E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL11EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL12A() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL12AColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL12A' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL12AColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL12B() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL12BColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL12B' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL12BColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL12C() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL12CColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL12C' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL12CColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL12D() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL12DColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL12D' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL12DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property POOL12E() As String
            Get
                Try 
                    Return CType(Me(Me.tableEXOTICS.POOL12EColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POOL12E' in table 'EXOTICS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableEXOTICS.POOL12EColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RACERow() As RACERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("RACE_EXOTICS")),RACERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("RACE_EXOTICS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRACEKEYNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.RACEKEYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRACEKEYNull()
            Me(Me.tableEXOTICS.RACEKEYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTYPEANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTYPEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTYPEANull()
            Me(Me.tableEXOTICS.POOLTYPEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTANull()
            Me(Me.tableEXOTICS.POOLTOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTBNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTBNull()
            Me(Me.tableEXOTICS.POOLTOTBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTCNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTCNull()
            Me(Me.tableEXOTICS.POOLTOTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTDNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTDNull()
            Me(Me.tableEXOTICS.POOLTOTDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTENull()
            Me(Me.tableEXOTICS.POOLTOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOLTOTFNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOLTOTFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOLTOTFNull()
            Me(Me.tableEXOTICS.POOLTOTFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL1ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL1AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL1ANull()
            Me(Me.tableEXOTICS.POOL1AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL1BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL1BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL1BNull()
            Me(Me.tableEXOTICS.POOL1BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL1CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL1CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL1CNull()
            Me(Me.tableEXOTICS.POOL1CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL1DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL1DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL1DNull()
            Me(Me.tableEXOTICS.POOL1DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL1ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL1EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL1ENull()
            Me(Me.tableEXOTICS.POOL1EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL2ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL2AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL2ANull()
            Me(Me.tableEXOTICS.POOL2AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL2BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL2BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL2BNull()
            Me(Me.tableEXOTICS.POOL2BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL2CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL2CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL2CNull()
            Me(Me.tableEXOTICS.POOL2CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL2DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL2DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL2DNull()
            Me(Me.tableEXOTICS.POOL2DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL2ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL2EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL2ENull()
            Me(Me.tableEXOTICS.POOL2EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL3ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL3AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL3ANull()
            Me(Me.tableEXOTICS.POOL3AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL3BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL3BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL3BNull()
            Me(Me.tableEXOTICS.POOL3BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL3CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL3CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL3CNull()
            Me(Me.tableEXOTICS.POOL3CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL3DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL3DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL3DNull()
            Me(Me.tableEXOTICS.POOL3DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL3ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL3EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL3ENull()
            Me(Me.tableEXOTICS.POOL3EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL4ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL4AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL4ANull()
            Me(Me.tableEXOTICS.POOL4AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL4BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL4BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL4BNull()
            Me(Me.tableEXOTICS.POOL4BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL4CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL4CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL4CNull()
            Me(Me.tableEXOTICS.POOL4CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL4DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL4DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL4DNull()
            Me(Me.tableEXOTICS.POOL4DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL4ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL4EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL4ENull()
            Me(Me.tableEXOTICS.POOL4EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL5ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL5AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL5ANull()
            Me(Me.tableEXOTICS.POOL5AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL5BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL5BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL5BNull()
            Me(Me.tableEXOTICS.POOL5BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL5CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL5CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL5CNull()
            Me(Me.tableEXOTICS.POOL5CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL5DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL5DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL5DNull()
            Me(Me.tableEXOTICS.POOL5DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL5ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL5EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL5ENull()
            Me(Me.tableEXOTICS.POOL5EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL6ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL6AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL6ANull()
            Me(Me.tableEXOTICS.POOL6AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL6BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL6BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL6BNull()
            Me(Me.tableEXOTICS.POOL6BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL6CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL6CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL6CNull()
            Me(Me.tableEXOTICS.POOL6CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL6DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL6DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL6DNull()
            Me(Me.tableEXOTICS.POOL6DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL6ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL6EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL6ENull()
            Me(Me.tableEXOTICS.POOL6EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL7ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL7AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL7ANull()
            Me(Me.tableEXOTICS.POOL7AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL7BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL7BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL7BNull()
            Me(Me.tableEXOTICS.POOL7BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL7CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL7CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL7CNull()
            Me(Me.tableEXOTICS.POOL7CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL7DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL7DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL7DNull()
            Me(Me.tableEXOTICS.POOL7DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL7ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL7EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL7ENull()
            Me(Me.tableEXOTICS.POOL7EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL8ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL8AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL8ANull()
            Me(Me.tableEXOTICS.POOL8AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL8BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL8BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL8BNull()
            Me(Me.tableEXOTICS.POOL8BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL8CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL8CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL8CNull()
            Me(Me.tableEXOTICS.POOL8CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL8DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL8DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL8DNull()
            Me(Me.tableEXOTICS.POOL8DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL8ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL8EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL8ENull()
            Me(Me.tableEXOTICS.POOL8EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL9ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL9AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL9ANull()
            Me(Me.tableEXOTICS.POOL9AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL9BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL9BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL9BNull()
            Me(Me.tableEXOTICS.POOL9BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL9CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL9CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL9CNull()
            Me(Me.tableEXOTICS.POOL9CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL9DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL9DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL9DNull()
            Me(Me.tableEXOTICS.POOL9DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL9ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL9EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL9ENull()
            Me(Me.tableEXOTICS.POOL9EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL10ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL10AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL10ANull()
            Me(Me.tableEXOTICS.POOL10AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL10BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL10BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL10BNull()
            Me(Me.tableEXOTICS.POOL10BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL10CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL10CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL10CNull()
            Me(Me.tableEXOTICS.POOL10CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL10DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL10DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL10DNull()
            Me(Me.tableEXOTICS.POOL10DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL10ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL10EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL10ENull()
            Me(Me.tableEXOTICS.POOL10EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL11ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL11AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL11ANull()
            Me(Me.tableEXOTICS.POOL11AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL11BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL11BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL11BNull()
            Me(Me.tableEXOTICS.POOL11BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL11CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL11CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL11CNull()
            Me(Me.tableEXOTICS.POOL11CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL11DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL11DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL11DNull()
            Me(Me.tableEXOTICS.POOL11DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL11ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL11EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL11ENull()
            Me(Me.tableEXOTICS.POOL11EColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL12ANull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL12AColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL12ANull()
            Me(Me.tableEXOTICS.POOL12AColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL12BNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL12BColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL12BNull()
            Me(Me.tableEXOTICS.POOL12BColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL12CNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL12CColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL12CNull()
            Me(Me.tableEXOTICS.POOL12CColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL12DNull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL12DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL12DNull()
            Me(Me.tableEXOTICS.POOL12DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPOOL12ENull() As Boolean
            Return Me.IsNull(Me.tableEXOTICS.POOL12EColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPOOL12ENull()
            Me(Me.tableEXOTICS.POOL12EColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RACERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RACERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RACERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RACERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class MTPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MTPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As MTPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As MTPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class ODDSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ODDSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As ODDSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As ODDSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RUNNINGORDERRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RUNNINGORDERRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RUNNINGORDERRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RUNNINGORDERRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class WINRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As WINRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As WINRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As WINRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PLACERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PLACERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PLACERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PLACERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class SHOWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SHOWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As SHOWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As SHOWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class DAILYDOUBLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DAILYDOUBLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As DAILYDOUBLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As DAILYDOUBLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class PERFECTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PERFECTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As PERFECTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As PERFECTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class BET3RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BET3Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As BET3Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As BET3Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TRIFECTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TRIFECTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TRIFECTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TRIFECTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RACEONDISPLAYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RACEONDISPLAYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RACEONDISPLAYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RACEONDISPLAYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class MESSAGESRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MESSAGESRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As MESSAGESRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As MESSAGESRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class STATUSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STATUSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As STATUSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As STATUSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TODRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TODRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TODRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TODRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class POSTTIMERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As POSTTIMERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As POSTTIMERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As POSTTIMERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TIMINGFINISHRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIMINGFINISHRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TIMINGFINISHRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TIMINGFINISHRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TIMINGMILERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIMINGMILERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TIMINGMILERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TIMINGMILERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TIMING34RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIMING34Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TIMING34Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TIMING34Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TIMING12RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIMING12Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TIMING12Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TIMING12Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class TIMING14RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIMING14Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As TIMING14Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As TIMING14Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class EXOTICSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As EXOTICSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As EXOTICSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As EXOTICSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
